// Generated by Haxe 3.4.3
#include <hxcpp.h>

#ifndef INCLUDED_Header
#include <Header.h>
#endif
#ifndef INCLUDED_haxe_IMap
#include <haxe/IMap.h>
#endif
#ifndef INCLUDED_haxe_ds_StringMap
#include <haxe/ds/StringMap.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_6289989f8617e743_9_keys,"Header","keys",0x21396055,"Header.keys","Header.hx",9,0x1514cf31)
HX_LOCAL_STACK_FRAME(_hx_pos_6289989f8617e743_19_MAGIC_SPELLS,"Header","MAGIC_SPELLS",0xea129d5e,"Header.MAGIC_SPELLS","Header.hx",19,0x1514cf31)
HX_LOCAL_STACK_FRAME(_hx_pos_6289989f8617e743_41_MAPS_PATH,"Header","MAPS_PATH",0xbf8629cc,"Header.MAPS_PATH","Header.hx",41,0x1514cf31)
HX_LOCAL_STACK_FRAME(_hx_pos_6289989f8617e743_44_PLAYER_CLASSES,"Header","PLAYER_CLASSES",0x2c837e09,"Header.PLAYER_CLASSES","Header.hx",44,0x1514cf31)
static const ::String _hx_array_data_31947dad_5[] = {
	HX_("Mage",92,62,2f,33),
};
HX_LOCAL_STACK_FRAME(_hx_pos_6289989f8617e743_47_QUANTITY_PLAYER_CLASSES,"Header","QUANTITY_PLAYER_CLASSES",0xea20241b,"Header.QUANTITY_PLAYER_CLASSES","Header.hx",47,0x1514cf31)
static const ::String _hx_array_data_31947dad_7[] = {
	HX_("Mage",92,62,2f,33),
};
HX_LOCAL_STACK_FRAME(_hx_pos_6289989f8617e743_50_DEFAULT_MP,"Header","DEFAULT_MP",0xf5f684a2,"Header.DEFAULT_MP","Header.hx",50,0x1514cf31)
HX_LOCAL_STACK_FRAME(_hx_pos_6289989f8617e743_53_DEFAULT_HP,"Header","DEFAULT_HP",0xf5f68047,"Header.DEFAULT_HP","Header.hx",53,0x1514cf31)
HX_LOCAL_STACK_FRAME(_hx_pos_6289989f8617e743_56_CLASSES_BONUSES,"Header","CLASSES_BONUSES",0x6b60f5f3,"Header.CLASSES_BONUSES","Header.hx",56,0x1514cf31)
HX_LOCAL_STACK_FRAME(_hx_pos_6289989f8617e743_78_START_INVENTORY,"Header","START_INVENTORY",0xccdc803e,"Header.START_INVENTORY","Header.hx",78,0x1514cf31)
HX_LOCAL_STACK_FRAME(_hx_pos_6289989f8617e743_94_CLASSES_ABILITY,"Header","CLASSES_ABILITY",0x282c72d0,"Header.CLASSES_ABILITY","Header.hx",94,0x1514cf31)
HX_LOCAL_STACK_FRAME(_hx_pos_6289989f8617e743_113_CONVENTIONAL_NOTATIONAL,"Header","CONVENTIONAL_NOTATIONAL",0xf47ae42f,"Header.CONVENTIONAL_NOTATIONAL","Header.hx",113,0x1514cf31)
HX_LOCAL_STACK_FRAME(_hx_pos_6289989f8617e743_132_CONVENTIONAL_NOTATIONAL_ENTER_POINT,"Header","CONVENTIONAL_NOTATIONAL_ENTER_POINT",0xee597f19,"Header.CONVENTIONAL_NOTATIONAL_ENTER_POINT","Header.hx",132,0x1514cf31)
static const ::String _hx_array_data_31947dad_15[] = {
	HX_("V",56,00,00,00),
};
HX_LOCAL_STACK_FRAME(_hx_pos_6289989f8617e743_135_NAME_MAPS_FILES,"Header","NAME_MAPS_FILES",0x8498fb22,"Header.NAME_MAPS_FILES","Header.hx",135,0x1514cf31)
HX_LOCAL_STACK_FRAME(_hx_pos_6289989f8617e743_141_CONVENTIONAL_NOTATIONAL_TABLES_NAMES,"Header","CONVENTIONAL_NOTATIONAL_TABLES_NAMES",0xba57169e,"Header.CONVENTIONAL_NOTATIONAL_TABLES_NAMES","Header.hx",141,0x1514cf31)
HX_LOCAL_STACK_FRAME(_hx_pos_6289989f8617e743_154_CONVENTIONAL_NOTATIONAL_WITHOUT_DETAIL,"Header","CONVENTIONAL_NOTATIONAL_WITHOUT_DETAIL",0x79902058,"Header.CONVENTIONAL_NOTATIONAL_WITHOUT_DETAIL","Header.hx",154,0x1514cf31)
HX_LOCAL_STACK_FRAME(_hx_pos_6289989f8617e743_157_POTENTIAL_ENEMY_STATS,"Header","POTENTIAL_ENEMY_STATS",0x8c9792a6,"Header.POTENTIAL_ENEMY_STATS","Header.hx",157,0x1514cf31)
HX_LOCAL_STACK_FRAME(_hx_pos_6289989f8617e743_169_MAGIC_MBOSS_SPELLS,"Header","MAGIC_MBOSS_SPELLS",0x5409c803,"Header.MAGIC_MBOSS_SPELLS","Header.hx",169,0x1514cf31)
static const ::String _hx_array_data_31947dad_22[] = {
	HX_("Meteor",4c,24,ed,3d),HX_("Ice walk",1e,d6,ff,81),
};
HX_LOCAL_STACK_FRAME(_hx_pos_6289989f8617e743_172_BODY_PARTS,"Header","BODY_PARTS",0x6700f584,"Header.BODY_PARTS","Header.hx",172,0x1514cf31)
static const ::String _hx_array_data_31947dad_24[] = {
	HX_("leg",ce,4b,52,00),HX_("had",4b,3f,4f,00),HX_("hand",6f,2b,08,45),HX_("neck",9f,72,02,49),HX_("knee",c3,a4,0d,47),
};
HX_LOCAL_STACK_FRAME(_hx_pos_6289989f8617e743_175_POTENTIAL_MBOSS_PREFIX_STATS,"Header","POTENTIAL_MBOSS_PREFIX_STATS",0x03c206f9,"Header.POTENTIAL_MBOSS_PREFIX_STATS","Header.hx",175,0x1514cf31)
static const int _hx_array_data_31947dad_26[] = {
	(int)4,(int)7,
};
static const int _hx_array_data_31947dad_27[] = {
	(int)5,(int)10,
};
static const int _hx_array_data_31947dad_28[] = {
	(int)4,(int)8,
};
static const int _hx_array_data_31947dad_29[] = {
	(int)6,(int)11,
};
static const int _hx_array_data_31947dad_30[] = {
	(int)4,(int)9,
};
HX_LOCAL_STACK_FRAME(_hx_pos_6289989f8617e743_184_CONVENTIONAL_NOTATIONAL_VILLAGE,"Header","CONVENTIONAL_NOTATIONAL_VILLAGE",0x112e9ebc,"Header.CONVENTIONAL_NOTATIONAL_VILLAGE","Header.hx",184,0x1514cf31)
static const ::String _hx_array_data_31947dad_32[] = {
	HX_("H",48,00,00,00),HX_("S",53,00,00,00),HX_(" ",20,00,00,00),
};
HX_LOCAL_STACK_FRAME(_hx_pos_6289989f8617e743_187_DEFAULT_PLAYER_X,"Header","DEFAULT_PLAYER_X",0xa33e7f39,"Header.DEFAULT_PLAYER_X","Header.hx",187,0x1514cf31)
HX_LOCAL_STACK_FRAME(_hx_pos_6289989f8617e743_190_DEFAULT_PLAYER_Y,"Header","DEFAULT_PLAYER_Y",0xa33e7f3a,"Header.DEFAULT_PLAYER_Y","Header.hx",190,0x1514cf31)
HX_LOCAL_STACK_FRAME(_hx_pos_6289989f8617e743_193_DEFAULT_WEIGHT_MAP,"Header","DEFAULT_WEIGHT_MAP",0x839f3d34,"Header.DEFAULT_WEIGHT_MAP","Header.hx",193,0x1514cf31)
HX_LOCAL_STACK_FRAME(_hx_pos_6289989f8617e743_196_DEFAULT_HEIGHT_MAP,"Header","DEFAULT_HEIGHT_MAP",0x3f423723,"Header.DEFAULT_HEIGHT_MAP","Header.hx",196,0x1514cf31)
HX_LOCAL_STACK_FRAME(_hx_pos_6289989f8617e743_199_DEFAULT_WEIGHT_MAP_VILLAGE,"Header","DEFAULT_WEIGHT_MAP_VILLAGE",0x708b04c1,"Header.DEFAULT_WEIGHT_MAP_VILLAGE","Header.hx",199,0x1514cf31)
HX_LOCAL_STACK_FRAME(_hx_pos_6289989f8617e743_202_DEFAULT_HEIGHT_MAP_VILLAGE,"Header","DEFAULT_HEIGHT_MAP_VILLAGE",0x5cb005b0,"Header.DEFAULT_HEIGHT_MAP_VILLAGE","Header.hx",202,0x1514cf31)
HX_LOCAL_STACK_FRAME(_hx_pos_6289989f8617e743_205_DEFAULT_QUANTITY_MAP_STRING,"Header","DEFAULT_QUANTITY_MAP_STRING",0xef4b8ac9,"Header.DEFAULT_QUANTITY_MAP_STRING","Header.hx",205,0x1514cf31)
HX_LOCAL_STACK_FRAME(_hx_pos_6289989f8617e743_208_DEFAULT_QUANTITY_MAP_STRING_VILLAGE,"Header","DEFAULT_QUANTITY_MAP_STRING_VILLAGE",0xcb4e6f56,"Header.DEFAULT_QUANTITY_MAP_STRING_VILLAGE","Header.hx",208,0x1514cf31)
HX_LOCAL_STACK_FRAME(_hx_pos_6289989f8617e743_211_DUNGEON_PREFIX,"Header","DUNGEON_PREFIX",0x685aab38,"Header.DUNGEON_PREFIX","Header.hx",211,0x1514cf31)
static const ::String _hx_array_data_31947dad_42[] = {
	HX_("Dark",96,80,3c,2d),HX_("Little",16,79,37,25),HX_("Singular",f7,64,d8,30),HX_("Blood",9a,ef,29,48),HX_("Frozen",c0,fd,64,ea),HX_("Ice",2b,bb,37,00),HX_("Fire",d6,ff,94,2e),HX_("Dead",c4,7a,3f,2d),HX_("Vampire",ae,15,d9,cd),HX_("Wolf",b2,28,d6,39),HX_("Fucking",6b,ff,54,6e),HX_("Gay",ff,34,36,00),
};
HX_LOCAL_STACK_FRAME(_hx_pos_6289989f8617e743_215_DUNGEON_TYPE,"Header","DUNGEON_TYPE",0xce1a0ae0,"Header.DUNGEON_TYPE","Header.hx",215,0x1514cf31)
static const ::String _hx_array_data_31947dad_44[] = {
	HX_(" castle",18,c3,3d,ee),HX_(" gates",e8,5b,27,5a),HX_(" house",80,bb,cf,f6),HX_(" house",80,bb,cf,f6),
};
HX_LOCAL_STACK_FRAME(_hx_pos_6289989f8617e743_218_DUNGEON_SUFFIX,"Header","DUNGEON_SUFFIX",0x5649b477,"Header.DUNGEON_SUFFIX","Header.hx",218,0x1514cf31)
static const ::String _hx_array_data_31947dad_46[] = {
	HX_("Ilya",8b,f0,92,30),HX_("Dionis",ee,f4,09,ef),HX_("Leena",df,a6,83,05),HX_("Lanaya",d0,2d,fd,85),HX_("Raxar",fa,a6,54,77),HX_("Lisa Su",57,1d,23,cb),
};

void Header_obj::__construct() { }

Dynamic Header_obj::__CreateEmpty() { return new Header_obj; }

void *Header_obj::_hx_vtable = 0;

Dynamic Header_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< Header_obj > _hx_result = new Header_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool Header_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x31947dad;
}

::Array< ::String > Header_obj::keys( ::haxe::ds::StringMap map_var){
            	HX_STACKFRAME(&_hx_pos_6289989f8617e743_9_keys)
HXLINE(  10)		 ::Dynamic iter_keys = map_var->keys();
HXLINE(  11)		::Array< ::String > keys = ::Array_obj< ::String >::__new(0);
HXLINE(  12)		{
HXLINE(  12)			 ::Dynamic key = iter_keys;
HXDLIN(  12)			while(( (bool)(key->__Field(HX_("hasNext",6d,a5,46,18),hx::paccDynamic)()) )){
HXLINE(  12)				::String key1 = ( (::String)(key->__Field(HX_("next",f3,84,02,49),hx::paccDynamic)()) );
HXLINE(  13)				keys->push(key1);
            			}
            		}
HXLINE(  15)		return keys;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Header_obj,keys,return )

 ::haxe::ds::StringMap Header_obj::MAGIC_SPELLS(){
            	HX_GC_STACKFRAME(&_hx_pos_6289989f8617e743_19_MAGIC_SPELLS)
HXDLIN(  19)		 ::haxe::ds::StringMap _g4 =  ::haxe::ds::StringMap_obj::__alloc( HX_CTX );
HXDLIN(  19)		{
HXLINE(  20)			 ::haxe::ds::StringMap _g =  ::haxe::ds::StringMap_obj::__alloc( HX_CTX );
HXDLIN(  20)			_g->set(HX_("damage_bonus",8f,bb,5d,6e),(int)4);
HXDLIN(  20)			_g->set(HX_("spell_cost",84,bb,67,ea),(int)5);
HXDLIN(  20)			_g->set(HX_("min_player_coeff",28,f9,39,81),((Float).0));
HXDLIN(  20)			_g->set(HX_("category",fe,2a,6c,ad),HX_("Ice",2b,bb,37,00));
HXLINE(  19)			_g4->set(HX_("Iceblast",ad,cc,2c,7b),_g);
            		}
HXDLIN(  19)		{
HXLINE(  25)			 ::haxe::ds::StringMap _g1 =  ::haxe::ds::StringMap_obj::__alloc( HX_CTX );
HXDLIN(  25)			_g1->set(HX_("damage_bonus",8f,bb,5d,6e),(int)5);
HXDLIN(  25)			_g1->set(HX_("spell_cost",84,bb,67,ea),(int)6);
HXDLIN(  25)			_g1->set(HX_("min_player_coeff",28,f9,39,81),((Float).0));
HXDLIN(  25)			_g1->set(HX_("category",fe,2a,6c,ad),HX_("Fire",d6,ff,94,2e));
HXLINE(  19)			_g4->set(HX_("Fireball",d5,84,51,af),_g1);
            		}
HXDLIN(  19)		{
HXLINE(  30)			 ::haxe::ds::StringMap _g2 =  ::haxe::ds::StringMap_obj::__alloc( HX_CTX );
HXDLIN(  30)			_g2->set(HX_("damage_bonus",8f,bb,5d,6e),(int)6);
HXDLIN(  30)			_g2->set(HX_("spell_cost",84,bb,67,ea),(int)7);
HXDLIN(  30)			_g2->set(HX_("min_player_coeff",28,f9,39,81),((Float).0));
HXDLIN(  30)			_g2->set(HX_("category",fe,2a,6c,ad),HX_("Water",f7,87,52,58));
HXLINE(  19)			_g4->set(HX_("Waterpillar",21,01,68,d7),_g2);
            		}
HXDLIN(  19)		{
HXLINE(  34)			 ::haxe::ds::StringMap _g3 =  ::haxe::ds::StringMap_obj::__alloc( HX_CTX );
HXDLIN(  34)			_g3->set(HX_("damage_bonus",8f,bb,5d,6e),(int)7);
HXDLIN(  34)			_g3->set(HX_("spell_cost",84,bb,67,ea),(int)8);
HXDLIN(  34)			_g3->set(HX_("min_player_coeff",28,f9,39,81),((Float).0));
HXDLIN(  34)			_g3->set(HX_("category",fe,2a,6c,ad),HX_("Iron",68,75,97,30));
HXLINE(  19)			_g4->set(HX_("Ironfist",0c,1e,5e,cf),_g3);
            		}
HXDLIN(  19)		return _g4;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(Header_obj,MAGIC_SPELLS,return )

::String Header_obj::MAPS_PATH(){
            	HX_STACKFRAME(&_hx_pos_6289989f8617e743_41_MAPS_PATH)
HXDLIN(  41)		return HX_("maps/%s",a6,dc,49,46);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(Header_obj,MAPS_PATH,return )

::Array< ::String > Header_obj::PLAYER_CLASSES(){
            	HX_STACKFRAME(&_hx_pos_6289989f8617e743_44_PLAYER_CLASSES)
HXDLIN(  44)		return ::Array_obj< ::String >::fromData( _hx_array_data_31947dad_5,1);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(Header_obj,PLAYER_CLASSES,return )

int Header_obj::QUANTITY_PLAYER_CLASSES(){
            	HX_STACKFRAME(&_hx_pos_6289989f8617e743_47_QUANTITY_PLAYER_CLASSES)
HXDLIN(  47)		return ::Array_obj< ::String >::fromData( _hx_array_data_31947dad_7,1)->length;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(Header_obj,QUANTITY_PLAYER_CLASSES,return )

int Header_obj::DEFAULT_MP(){
            	HX_STACKFRAME(&_hx_pos_6289989f8617e743_50_DEFAULT_MP)
HXDLIN(  50)		return (int)10;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(Header_obj,DEFAULT_MP,return )

int Header_obj::DEFAULT_HP(){
            	HX_STACKFRAME(&_hx_pos_6289989f8617e743_53_DEFAULT_HP)
HXDLIN(  53)		return (int)10;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(Header_obj,DEFAULT_HP,return )

 ::haxe::ds::StringMap Header_obj::CLASSES_BONUSES(){
            	HX_GC_STACKFRAME(&_hx_pos_6289989f8617e743_56_CLASSES_BONUSES)
HXDLIN(  56)		 ::haxe::ds::StringMap _g3 =  ::haxe::ds::StringMap_obj::__alloc( HX_CTX );
HXDLIN(  56)		{
HXLINE(  57)			 ::haxe::ds::StringMap _g =  ::haxe::ds::StringMap_obj::__alloc( HX_CTX );
HXDLIN(  57)			_g->set(HX_("hp",08,5b,00,00),(int)5);
HXDLIN(  57)			_g->set(HX_("mp",63,5f,00,00),(int)0);
HXDLIN(  57)			_g->set(HX_("str",b1,a8,57,00),(int)5);
HXDLIN(  57)			_g->set(HX_("dex",d7,39,4c,00),(int)1);
HXDLIN(  57)			_g->set(HX_("con",42,80,4b,00),(int)1);
HXDLIN(  57)			_g->set(HX_("inte",96,44,bb,45),(int)1);
HXDLIN(  57)			_g->set(HX_("wis",21,a8,5a,00),(int)1);
HXDLIN(  57)			_g->set(HX_("cha",1c,7a,4b,00),(int)1);
HXLINE(  56)			_g3->set(HX_("Warrior",a2,dd,c1,d9),_g);
            		}
HXDLIN(  56)		{
HXLINE(  63)			 ::haxe::ds::StringMap _g1 =  ::haxe::ds::StringMap_obj::__alloc( HX_CTX );
HXDLIN(  63)			_g1->set(HX_("hp",08,5b,00,00),(int)4);
HXDLIN(  63)			_g1->set(HX_("mp",63,5f,00,00),(int)1);
HXDLIN(  63)			_g1->set(HX_("str",b1,a8,57,00),(int)1);
HXDLIN(  63)			_g1->set(HX_("dex",d7,39,4c,00),(int)5);
HXDLIN(  63)			_g1->set(HX_("con",42,80,4b,00),(int)1);
HXDLIN(  63)			_g1->set(HX_("inte",96,44,bb,45),(int)1);
HXDLIN(  63)			_g1->set(HX_("wis",21,a8,5a,00),(int)1);
HXDLIN(  63)			_g1->set(HX_("cha",1c,7a,4b,00),(int)1);
HXLINE(  56)			_g3->set(HX_("Roge",3b,13,88,36),_g1);
            		}
HXDLIN(  56)		{
HXLINE(  69)			 ::haxe::ds::StringMap _g2 =  ::haxe::ds::StringMap_obj::__alloc( HX_CTX );
HXDLIN(  69)			_g2->set(HX_("hp",08,5b,00,00),(int)2);
HXDLIN(  69)			_g2->set(HX_("mp",63,5f,00,00),(int)5);
HXDLIN(  69)			_g2->set(HX_("str",b1,a8,57,00),(int)1);
HXDLIN(  69)			_g2->set(HX_("dex",d7,39,4c,00),(int)1);
HXDLIN(  69)			_g2->set(HX_("con",42,80,4b,00),(int)1);
HXDLIN(  69)			_g2->set(HX_("inte",96,44,bb,45),(int)1);
HXDLIN(  69)			_g2->set(HX_("wis",21,a8,5a,00),(int)5);
HXDLIN(  69)			_g2->set(HX_("cha",1c,7a,4b,00),(int)1);
HXLINE(  56)			_g3->set(HX_("Mage",92,62,2f,33),_g2);
            		}
HXDLIN(  56)		return _g3;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(Header_obj,CLASSES_BONUSES,return )

 ::haxe::ds::StringMap Header_obj::START_INVENTORY(){
            	HX_GC_STACKFRAME(&_hx_pos_6289989f8617e743_78_START_INVENTORY)
HXDLIN(  78)		 ::haxe::ds::StringMap _g3 =  ::haxe::ds::StringMap_obj::__alloc( HX_CTX );
HXDLIN(  78)		{
HXLINE(  79)			 ::haxe::ds::StringMap _g =  ::haxe::ds::StringMap_obj::__alloc( HX_CTX );
HXDLIN(  79)			_g->set(HX_("inventory",9c,76,b6,48),HX_("sword",bd,b7,11,86));
HXLINE(  78)			_g3->set(HX_("Warrior",a2,dd,c1,d9),_g);
            		}
HXDLIN(  78)		{
HXLINE(  83)			 ::haxe::ds::StringMap _g1 =  ::haxe::ds::StringMap_obj::__alloc( HX_CTX );
HXDLIN(  83)			_g1->set(HX_("inventory",9c,76,b6,48),HX_("blade",98,d6,f1,b4));
HXLINE(  78)			_g3->set(HX_("Roge",3b,13,88,36),_g1);
            		}
HXDLIN(  78)		{
HXLINE(  87)			 ::haxe::ds::StringMap _g2 =  ::haxe::ds::StringMap_obj::__alloc( HX_CTX );
HXDLIN(  87)			_g2->set(HX_("inventory",9c,76,b6,48),HX_("scepter",c6,eb,51,b5));
HXLINE(  78)			_g3->set(HX_("Mage",92,62,2f,33),_g2);
            		}
HXDLIN(  78)		return _g3;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(Header_obj,START_INVENTORY,return )

 ::haxe::ds::StringMap Header_obj::CLASSES_ABILITY(){
            	HX_GC_STACKFRAME(&_hx_pos_6289989f8617e743_94_CLASSES_ABILITY)
HXDLIN(  94)		 ::haxe::ds::StringMap _g3 =  ::haxe::ds::StringMap_obj::__alloc( HX_CTX );
HXDLIN(  94)		{
HXLINE(  95)			 ::haxe::ds::StringMap _g =  ::haxe::ds::StringMap_obj::__alloc( HX_CTX );
HXDLIN(  95)			_g->set(HX_("str",b1,a8,57,00),(int)7);
HXDLIN(  95)			_g->set(HX_("dex",d7,39,4c,00),(int)3);
HXDLIN(  95)			_g->set(HX_("con",42,80,4b,00),(int)6);
HXDLIN(  95)			_g->set(HX_("inte",96,44,bb,45),(int)2);
HXDLIN(  95)			_g->set(HX_("wis",21,a8,5a,00),(int)2);
HXDLIN(  95)			_g->set(HX_("cha",1c,7a,4b,00),(int)4);
HXLINE(  94)			_g3->set(HX_("Warrior",a2,dd,c1,d9),_g);
            		}
HXDLIN(  94)		{
HXLINE( 100)			 ::haxe::ds::StringMap _g1 =  ::haxe::ds::StringMap_obj::__alloc( HX_CTX );
HXDLIN( 100)			_g1->set(HX_("str",b1,a8,57,00),(int)6);
HXDLIN( 100)			_g1->set(HX_("dex",d7,39,4c,00),(int)5);
HXDLIN( 100)			_g1->set(HX_("con",42,80,4b,00),(int)4);
HXDLIN( 100)			_g1->set(HX_("inte",96,44,bb,45),(int)2);
HXDLIN( 100)			_g1->set(HX_("wis",21,a8,5a,00),(int)2);
HXDLIN( 100)			_g1->set(HX_("cha",1c,7a,4b,00),(int)3);
HXLINE(  94)			_g3->set(HX_("Roge",3b,13,88,36),_g1);
            		}
HXDLIN(  94)		{
HXLINE( 105)			 ::haxe::ds::StringMap _g2 =  ::haxe::ds::StringMap_obj::__alloc( HX_CTX );
HXDLIN( 105)			_g2->set(HX_("str",b1,a8,57,00),(int)4);
HXDLIN( 105)			_g2->set(HX_("dex",d7,39,4c,00),(int)5);
HXDLIN( 105)			_g2->set(HX_("con",42,80,4b,00),(int)4);
HXDLIN( 105)			_g2->set(HX_("inte",96,44,bb,45),(int)3);
HXDLIN( 105)			_g2->set(HX_("wis",21,a8,5a,00),(int)3);
HXDLIN( 105)			_g2->set(HX_("cha",1c,7a,4b,00),(int)3);
HXLINE(  94)			_g3->set(HX_("Mage",92,62,2f,33),_g2);
            		}
HXDLIN(  94)		return _g3;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(Header_obj,CLASSES_ABILITY,return )

 ::haxe::ds::StringMap Header_obj::CONVENTIONAL_NOTATIONAL(){
            	HX_GC_STACKFRAME(&_hx_pos_6289989f8617e743_113_CONVENTIONAL_NOTATIONAL)
HXDLIN( 113)		 ::haxe::ds::StringMap _g =  ::haxe::ds::StringMap_obj::__alloc( HX_CTX );
HXDLIN( 113)		_g->set(HX_("H",48,00,00,00),HX_("Home",3f,f6,eb,2f));
HXDLIN( 113)		_g->set(HX_("S",53,00,00,00),HX_("Shop",16,01,2c,37));
HXDLIN( 113)		_g->set(HX_("B",42,00,00,00),HX_("Bar",b3,69,32,00));
HXDLIN( 113)		_g->set(HX_("M",4d,00,00,00),HX_("Mountain",6d,8e,c6,a6));
HXDLIN( 113)		_g->set(HX_("C",43,00,00,00),HX_("Cave",6d,4d,93,2c));
HXDLIN( 113)		_g->set(HX_("f",66,00,00,00),HX_("Field",9a,04,c1,93));
HXDLIN( 113)		_g->set(HX_("F",46,00,00,00),HX_("Forest",fd,00,1d,32));
HXDLIN( 113)		_g->set(HX_("R",52,00,00,00),HX_("River",ec,da,9c,7c));
HXDLIN( 113)		_g->set(HX_("b",62,00,00,00),HX_("little Bridge",93,92,9d,f9));
HXDLIN( 113)		_g->set(HX_("p",70,00,00,00),HX_("Player spawn",5c,a0,41,dc));
HXDLIN( 113)		_g->set(HX_(" ",20,00,00,00),HX_("***Wind***",58,05,ab,3f));
HXDLIN( 113)		_g->set(HX_("V",56,00,00,00),HX_("Village",0c,6e,a2,6a));
HXDLIN( 113)		_g->set(HX_("\xc4""\x86""",42,ab,00,00),HX_("Temple",ad,82,d4,05));
HXDLIN( 113)		_g->set(HX_("E",45,00,00,00),HX_("Enemy",28,82,a8,03));
HXDLIN( 113)		_g->set(HX_("#",23,00,00,00),HX_("Wall",2a,89,cb,39));
HXDLIN( 113)		return _g;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(Header_obj,CONVENTIONAL_NOTATIONAL,return )

::Array< ::String > Header_obj::CONVENTIONAL_NOTATIONAL_ENTER_POINT(){
            	HX_STACKFRAME(&_hx_pos_6289989f8617e743_132_CONVENTIONAL_NOTATIONAL_ENTER_POINT)
HXDLIN( 132)		return ::Array_obj< ::String >::fromData( _hx_array_data_31947dad_15,1);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(Header_obj,CONVENTIONAL_NOTATIONAL_ENTER_POINT,return )

 ::haxe::ds::StringMap Header_obj::NAME_MAPS_FILES(){
            	HX_GC_STACKFRAME(&_hx_pos_6289989f8617e743_135_NAME_MAPS_FILES)
HXDLIN( 135)		 ::haxe::ds::StringMap _g =  ::haxe::ds::StringMap_obj::__alloc( HX_CTX );
HXDLIN( 135)		_g->set(HX_("V",56,00,00,00),HX_("village",2c,46,51,9d));
HXDLIN( 135)		_g->set(HX_("E",45,00,00,00),HX_("enemy",48,12,7b,70));
HXDLIN( 135)		return _g;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(Header_obj,NAME_MAPS_FILES,return )

 ::haxe::ds::StringMap Header_obj::CONVENTIONAL_NOTATIONAL_TABLES_NAMES(){
            	HX_GC_STACKFRAME(&_hx_pos_6289989f8617e743_141_CONVENTIONAL_NOTATIONAL_TABLES_NAMES)
HXDLIN( 141)		 ::haxe::ds::StringMap _g =  ::haxe::ds::StringMap_obj::__alloc( HX_CTX );
HXDLIN( 141)		_g->set(HX_("H",48,00,00,00),HX_("homes",74,11,5e,2b));
HXDLIN( 141)		_g->set(HX_("S",53,00,00,00),HX_("shops",bd,82,27,7c));
HXDLIN( 141)		_g->set(HX_("B",42,00,00,00),HX_("bars",40,e7,10,41));
HXDLIN( 141)		_g->set(HX_("M",4d,00,00,00),HX_("mountains",86,31,23,a5));
HXDLIN( 141)		_g->set(HX_("R",52,00,00,00),HX_("rivers",e7,3f,0e,58));
HXDLIN( 141)		_g->set(HX_("V",56,00,00,00),HX_("villages",c7,20,cc,09));
HXDLIN( 141)		_g->set(HX_("E",45,00,00,00),HX_("enemyes",b6,8c,1a,d3));
HXDLIN( 141)		_g->set(HX_("D",44,00,00,00),HX_("dungeons",39,72,a2,e5));
HXDLIN( 141)		_g->set(HX_("\xc4""\x86""",42,ab,00,00),HX_("temples",46,ad,cc,46));
HXDLIN( 141)		return _g;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(Header_obj,CONVENTIONAL_NOTATIONAL_TABLES_NAMES,return )

::Array< ::String > Header_obj::CONVENTIONAL_NOTATIONAL_WITHOUT_DETAIL(){
            	HX_GC_STACKFRAME(&_hx_pos_6289989f8617e743_154_CONVENTIONAL_NOTATIONAL_WITHOUT_DETAIL)
HXDLIN( 154)		 ::haxe::ds::StringMap _g =  ::haxe::ds::StringMap_obj::__alloc( HX_CTX );
HXDLIN( 154)		_g->set(HX_("H",48,00,00,00),HX_("homes",74,11,5e,2b));
HXDLIN( 154)		_g->set(HX_("S",53,00,00,00),HX_("shops",bd,82,27,7c));
HXDLIN( 154)		_g->set(HX_("B",42,00,00,00),HX_("bars",40,e7,10,41));
HXDLIN( 154)		_g->set(HX_("M",4d,00,00,00),HX_("mountains",86,31,23,a5));
HXDLIN( 154)		_g->set(HX_("R",52,00,00,00),HX_("rivers",e7,3f,0e,58));
HXDLIN( 154)		_g->set(HX_("V",56,00,00,00),HX_("villages",c7,20,cc,09));
HXDLIN( 154)		_g->set(HX_("E",45,00,00,00),HX_("enemyes",b6,8c,1a,d3));
HXDLIN( 154)		_g->set(HX_("D",44,00,00,00),HX_("dungeons",39,72,a2,e5));
HXDLIN( 154)		_g->set(HX_("\xc4""\x86""",42,ab,00,00),HX_("temples",46,ad,cc,46));
HXDLIN( 154)		 ::Dynamic iter_keys = _g->keys();
HXDLIN( 154)		::Array< ::String > keys = ::Array_obj< ::String >::__new(0);
HXDLIN( 154)		{
HXDLIN( 154)			 ::Dynamic key = iter_keys;
HXDLIN( 154)			while(( (bool)(key->__Field(HX_("hasNext",6d,a5,46,18),hx::paccDynamic)()) )){
HXDLIN( 154)				::String key1 = ( (::String)(key->__Field(HX_("next",f3,84,02,49),hx::paccDynamic)()) );
HXDLIN( 154)				keys->push(key1);
            			}
            		}
HXDLIN( 154)		return keys;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(Header_obj,CONVENTIONAL_NOTATIONAL_WITHOUT_DETAIL,return )

 ::haxe::ds::StringMap Header_obj::POTENTIAL_ENEMY_STATS(){
            	HX_GC_STACKFRAME(&_hx_pos_6289989f8617e743_157_POTENTIAL_ENEMY_STATS)
HXDLIN( 157)		 ::haxe::ds::StringMap _g2 =  ::haxe::ds::StringMap_obj::__alloc( HX_CTX );
HXDLIN( 157)		{
HXLINE( 158)			 ::haxe::ds::StringMap _g =  ::haxe::ds::StringMap_obj::__alloc( HX_CTX );
HXDLIN( 158)			_g->set(HX_("hp",08,5b,00,00),(int)19);
HXDLIN( 158)			_g->set(HX_("mp",63,5f,00,00),(int)6);
HXLINE( 157)			_g2->set(HX_("Ork",c8,55,3c,00),_g);
            		}
HXDLIN( 157)		{
HXLINE( 162)			 ::haxe::ds::StringMap _g1 =  ::haxe::ds::StringMap_obj::__alloc( HX_CTX );
HXDLIN( 162)			_g1->set(HX_("hp",08,5b,00,00),(int)17);
HXDLIN( 162)			_g1->set(HX_("mp",63,5f,00,00),(int)9);
HXLINE( 157)			_g2->set(HX_("Gnom",25,ff,41,2f),_g1);
            		}
HXDLIN( 157)		return _g2;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(Header_obj,POTENTIAL_ENEMY_STATS,return )

::Array< ::String > Header_obj::MAGIC_MBOSS_SPELLS(){
            	HX_STACKFRAME(&_hx_pos_6289989f8617e743_169_MAGIC_MBOSS_SPELLS)
HXDLIN( 169)		return ::Array_obj< ::String >::fromData( _hx_array_data_31947dad_22,2);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(Header_obj,MAGIC_MBOSS_SPELLS,return )

::Array< ::String > Header_obj::BODY_PARTS(){
            	HX_STACKFRAME(&_hx_pos_6289989f8617e743_172_BODY_PARTS)
HXDLIN( 172)		return ::Array_obj< ::String >::fromData( _hx_array_data_31947dad_24,5);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(Header_obj,BODY_PARTS,return )

 ::haxe::ds::StringMap Header_obj::POTENTIAL_MBOSS_PREFIX_STATS(){
            	HX_GC_STACKFRAME(&_hx_pos_6289989f8617e743_175_POTENTIAL_MBOSS_PREFIX_STATS)
HXDLIN( 175)		 ::haxe::ds::StringMap _g =  ::haxe::ds::StringMap_obj::__alloc( HX_CTX );
HXDLIN( 175)		_g->set(HX_("Ice",2b,bb,37,00),::Array_obj< int >::fromData( _hx_array_data_31947dad_26,2));
HXDLIN( 175)		_g->set(HX_("Fire",d6,ff,94,2e),::Array_obj< int >::fromData( _hx_array_data_31947dad_27,2));
HXDLIN( 175)		_g->set(HX_("Water",f7,87,52,58),::Array_obj< int >::fromData( _hx_array_data_31947dad_28,2));
HXDLIN( 175)		_g->set(HX_("Magma",87,e4,46,96),::Array_obj< int >::fromData( _hx_array_data_31947dad_29,2));
HXDLIN( 175)		_g->set(HX_("Earth",6a,9f,1a,fb),::Array_obj< int >::fromData( _hx_array_data_31947dad_30,2));
HXDLIN( 175)		return _g;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(Header_obj,POTENTIAL_MBOSS_PREFIX_STATS,return )

::Array< ::String > Header_obj::CONVENTIONAL_NOTATIONAL_VILLAGE(){
            	HX_STACKFRAME(&_hx_pos_6289989f8617e743_184_CONVENTIONAL_NOTATIONAL_VILLAGE)
HXDLIN( 184)		return ::Array_obj< ::String >::fromData( _hx_array_data_31947dad_32,3);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(Header_obj,CONVENTIONAL_NOTATIONAL_VILLAGE,return )

int Header_obj::DEFAULT_PLAYER_X(){
            	HX_STACKFRAME(&_hx_pos_6289989f8617e743_187_DEFAULT_PLAYER_X)
HXDLIN( 187)		return (int)0;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(Header_obj,DEFAULT_PLAYER_X,return )

int Header_obj::DEFAULT_PLAYER_Y(){
            	HX_STACKFRAME(&_hx_pos_6289989f8617e743_190_DEFAULT_PLAYER_Y)
HXDLIN( 190)		return (int)0;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(Header_obj,DEFAULT_PLAYER_Y,return )

int Header_obj::DEFAULT_WEIGHT_MAP(){
            	HX_STACKFRAME(&_hx_pos_6289989f8617e743_193_DEFAULT_WEIGHT_MAP)
HXDLIN( 193)		return (int)50;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(Header_obj,DEFAULT_WEIGHT_MAP,return )

int Header_obj::DEFAULT_HEIGHT_MAP(){
            	HX_STACKFRAME(&_hx_pos_6289989f8617e743_196_DEFAULT_HEIGHT_MAP)
HXDLIN( 196)		return (int)20;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(Header_obj,DEFAULT_HEIGHT_MAP,return )

int Header_obj::DEFAULT_WEIGHT_MAP_VILLAGE(){
            	HX_STACKFRAME(&_hx_pos_6289989f8617e743_199_DEFAULT_WEIGHT_MAP_VILLAGE)
HXDLIN( 199)		return (int)20;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(Header_obj,DEFAULT_WEIGHT_MAP_VILLAGE,return )

int Header_obj::DEFAULT_HEIGHT_MAP_VILLAGE(){
            	HX_STACKFRAME(&_hx_pos_6289989f8617e743_202_DEFAULT_HEIGHT_MAP_VILLAGE)
HXDLIN( 202)		return (int)10;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(Header_obj,DEFAULT_HEIGHT_MAP_VILLAGE,return )

int Header_obj::DEFAULT_QUANTITY_MAP_STRING(){
            	HX_STACKFRAME(&_hx_pos_6289989f8617e743_205_DEFAULT_QUANTITY_MAP_STRING)
HXDLIN( 205)		return (int)20;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(Header_obj,DEFAULT_QUANTITY_MAP_STRING,return )

int Header_obj::DEFAULT_QUANTITY_MAP_STRING_VILLAGE(){
            	HX_STACKFRAME(&_hx_pos_6289989f8617e743_208_DEFAULT_QUANTITY_MAP_STRING_VILLAGE)
HXDLIN( 208)		return (int)10;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(Header_obj,DEFAULT_QUANTITY_MAP_STRING_VILLAGE,return )

::Array< ::String > Header_obj::DUNGEON_PREFIX(){
            	HX_STACKFRAME(&_hx_pos_6289989f8617e743_211_DUNGEON_PREFIX)
HXDLIN( 211)		return ::Array_obj< ::String >::fromData( _hx_array_data_31947dad_42,12);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(Header_obj,DUNGEON_PREFIX,return )

::Array< ::String > Header_obj::DUNGEON_TYPE(){
            	HX_STACKFRAME(&_hx_pos_6289989f8617e743_215_DUNGEON_TYPE)
HXDLIN( 215)		return ::Array_obj< ::String >::fromData( _hx_array_data_31947dad_44,4);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(Header_obj,DUNGEON_TYPE,return )

::Array< ::String > Header_obj::DUNGEON_SUFFIX(){
            	HX_STACKFRAME(&_hx_pos_6289989f8617e743_218_DUNGEON_SUFFIX)
HXDLIN( 218)		return ::Array_obj< ::String >::fromData( _hx_array_data_31947dad_46,6);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(Header_obj,DUNGEON_SUFFIX,return )


Header_obj::Header_obj()
{
}

bool Header_obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"keys") ) { outValue = keys_dyn(); return true; }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"MAPS_PATH") ) { outValue = MAPS_PATH_dyn(); return true; }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"DEFAULT_MP") ) { outValue = DEFAULT_MP_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"DEFAULT_HP") ) { outValue = DEFAULT_HP_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"BODY_PARTS") ) { outValue = BODY_PARTS_dyn(); return true; }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"MAGIC_SPELLS") ) { outValue = MAGIC_SPELLS_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"DUNGEON_TYPE") ) { outValue = DUNGEON_TYPE_dyn(); return true; }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"PLAYER_CLASSES") ) { outValue = PLAYER_CLASSES_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"DUNGEON_PREFIX") ) { outValue = DUNGEON_PREFIX_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"DUNGEON_SUFFIX") ) { outValue = DUNGEON_SUFFIX_dyn(); return true; }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"CLASSES_BONUSES") ) { outValue = CLASSES_BONUSES_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"START_INVENTORY") ) { outValue = START_INVENTORY_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"CLASSES_ABILITY") ) { outValue = CLASSES_ABILITY_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"NAME_MAPS_FILES") ) { outValue = NAME_MAPS_FILES_dyn(); return true; }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"DEFAULT_PLAYER_X") ) { outValue = DEFAULT_PLAYER_X_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"DEFAULT_PLAYER_Y") ) { outValue = DEFAULT_PLAYER_Y_dyn(); return true; }
		break;
	case 18:
		if (HX_FIELD_EQ(inName,"MAGIC_MBOSS_SPELLS") ) { outValue = MAGIC_MBOSS_SPELLS_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"DEFAULT_WEIGHT_MAP") ) { outValue = DEFAULT_WEIGHT_MAP_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"DEFAULT_HEIGHT_MAP") ) { outValue = DEFAULT_HEIGHT_MAP_dyn(); return true; }
		break;
	case 21:
		if (HX_FIELD_EQ(inName,"POTENTIAL_ENEMY_STATS") ) { outValue = POTENTIAL_ENEMY_STATS_dyn(); return true; }
		break;
	case 23:
		if (HX_FIELD_EQ(inName,"QUANTITY_PLAYER_CLASSES") ) { outValue = QUANTITY_PLAYER_CLASSES_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"CONVENTIONAL_NOTATIONAL") ) { outValue = CONVENTIONAL_NOTATIONAL_dyn(); return true; }
		break;
	case 26:
		if (HX_FIELD_EQ(inName,"DEFAULT_WEIGHT_MAP_VILLAGE") ) { outValue = DEFAULT_WEIGHT_MAP_VILLAGE_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"DEFAULT_HEIGHT_MAP_VILLAGE") ) { outValue = DEFAULT_HEIGHT_MAP_VILLAGE_dyn(); return true; }
		break;
	case 27:
		if (HX_FIELD_EQ(inName,"DEFAULT_QUANTITY_MAP_STRING") ) { outValue = DEFAULT_QUANTITY_MAP_STRING_dyn(); return true; }
		break;
	case 28:
		if (HX_FIELD_EQ(inName,"POTENTIAL_MBOSS_PREFIX_STATS") ) { outValue = POTENTIAL_MBOSS_PREFIX_STATS_dyn(); return true; }
		break;
	case 31:
		if (HX_FIELD_EQ(inName,"CONVENTIONAL_NOTATIONAL_VILLAGE") ) { outValue = CONVENTIONAL_NOTATIONAL_VILLAGE_dyn(); return true; }
		break;
	case 35:
		if (HX_FIELD_EQ(inName,"CONVENTIONAL_NOTATIONAL_ENTER_POINT") ) { outValue = CONVENTIONAL_NOTATIONAL_ENTER_POINT_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"DEFAULT_QUANTITY_MAP_STRING_VILLAGE") ) { outValue = DEFAULT_QUANTITY_MAP_STRING_VILLAGE_dyn(); return true; }
		break;
	case 36:
		if (HX_FIELD_EQ(inName,"CONVENTIONAL_NOTATIONAL_TABLES_NAMES") ) { outValue = CONVENTIONAL_NOTATIONAL_TABLES_NAMES_dyn(); return true; }
		break;
	case 38:
		if (HX_FIELD_EQ(inName,"CONVENTIONAL_NOTATIONAL_WITHOUT_DETAIL") ) { outValue = CONVENTIONAL_NOTATIONAL_WITHOUT_DETAIL_dyn(); return true; }
	}
	return false;
}

#if HXCPP_SCRIPTABLE
static hx::StorageInfo *Header_obj_sMemberStorageInfo = 0;
static hx::StaticInfo *Header_obj_sStaticStorageInfo = 0;
#endif

static void Header_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(Header_obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void Header_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(Header_obj::__mClass,"__mClass");
};

#endif

hx::Class Header_obj::__mClass;

static ::String Header_obj_sStaticFields[] = {
	HX_HCSTRING("keys","\xf4","\xe1","\x06","\x47"),
	HX_HCSTRING("MAGIC_SPELLS","\xfd","\x55","\xb9","\xce"),
	HX_HCSTRING("MAPS_PATH","\xcd","\x67","\xe3","\x0e"),
	HX_HCSTRING("PLAYER_CLASSES","\x68","\xdc","\xc0","\x92"),
	HX_HCSTRING("QUANTITY_PLAYER_CLASSES","\xdc","\x81","\xe9","\x07"),
	HX_HCSTRING("DEFAULT_MP","\x81","\x87","\x2f","\x18"),
	HX_HCSTRING("DEFAULT_HP","\x26","\x83","\x2f","\x18"),
	HX_HCSTRING("CLASSES_BONUSES","\xb4","\x2a","\xd6","\x7a"),
	HX_HCSTRING("START_INVENTORY","\xff","\xb4","\x51","\xdc"),
	HX_HCSTRING("CLASSES_ABILITY","\x91","\xa7","\xa1","\x37"),
	HX_HCSTRING("CONVENTIONAL_NOTATIONAL","\xf0","\x41","\x44","\x12"),
	HX_HCSTRING("CONVENTIONAL_NOTATIONAL_ENTER_POINT","\x5a","\xfa","\x58","\x99"),
	HX_HCSTRING("NAME_MAPS_FILES","\xe3","\x2f","\x0e","\x94"),
	HX_HCSTRING("CONVENTIONAL_NOTATIONAL_TABLES_NAMES","\x3d","\x74","\xe3","\xae"),
	HX_HCSTRING("CONVENTIONAL_NOTATIONAL_WITHOUT_DETAIL","\xb7","\x63","\x26","\xf0"),
	HX_HCSTRING("POTENTIAL_ENEMY_STATS","\x27","\x4e","\x9a","\xd7"),
	HX_HCSTRING("MAGIC_MBOSS_SPELLS","\xe2","\x41","\x5f","\x7a"),
	HX_HCSTRING("BODY_PARTS","\x63","\xf8","\x39","\x89"),
	HX_HCSTRING("POTENTIAL_MBOSS_PREFIX_STATS","\x98","\x2d","\xc8","\xa8"),
	HX_HCSTRING("CONVENTIONAL_NOTATIONAL_VILLAGE","\x7d","\x25","\x1d","\x5b"),
	HX_HCSTRING("DEFAULT_PLAYER_X","\x58","\x73","\x57","\x1a"),
	HX_HCSTRING("DEFAULT_PLAYER_Y","\x59","\x73","\x57","\x1a"),
	HX_HCSTRING("DEFAULT_WEIGHT_MAP","\x13","\xb7","\xf4","\xa9"),
	HX_HCSTRING("DEFAULT_HEIGHT_MAP","\x02","\xb1","\x97","\x65"),
	HX_HCSTRING("DEFAULT_WEIGHT_MAP_VILLAGE","\xa0","\xf5","\xcb","\x4e"),
	HX_HCSTRING("DEFAULT_HEIGHT_MAP_VILLAGE","\x8f","\xf6","\xf0","\x3a"),
	HX_HCSTRING("DEFAULT_QUANTITY_MAP_STRING","\x0a","\x5d","\xdd","\x89"),
	HX_HCSTRING("DEFAULT_QUANTITY_MAP_STRING_VILLAGE","\x97","\xea","\x4d","\x76"),
	HX_HCSTRING("DUNGEON_PREFIX","\x97","\x09","\x98","\xce"),
	HX_HCSTRING("DUNGEON_TYPE","\x7f","\xc3","\xc0","\xb2"),
	HX_HCSTRING("DUNGEON_SUFFIX","\xd6","\x12","\x87","\xbc"),
	::String(null())
};

void Header_obj::__register()
{
	hx::Object *dummy = new Header_obj;
	Header_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("Header","\xad","\x7d","\x94","\x31");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &Header_obj::__GetStatic;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = Header_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(Header_obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = hx::TCanCast< Header_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = Header_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Header_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Header_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

