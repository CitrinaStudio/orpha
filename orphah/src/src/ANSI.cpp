// Generated by Haxe 3.4.3
#include <hxcpp.h>

#ifndef INCLUDED_ANSI
#include <ANSI.h>
#endif
#ifndef INCLUDED_Attribute
#include <Attribute.h>
#endif
#ifndef INCLUDED_Reflect
#include <Reflect.h>
#endif
#ifndef INCLUDED_Std
#include <Std.h>
#endif
#ifndef INCLUDED_Sys
#include <Sys.h>
#endif
#ifndef INCLUDED_haxe_IMap
#include <haxe/IMap.h>
#endif
#ifndef INCLUDED_haxe_ds_BalancedTree
#include <haxe/ds/BalancedTree.h>
#endif
#ifndef INCLUDED_haxe_ds_EnumValueMap
#include <haxe/ds/EnumValueMap.h>
#endif
#ifndef INCLUDED_haxe_ds_StringMap
#include <haxe/ds/StringMap.h>
#endif
#ifndef INCLUDED_sys_io_Process
#include <sys/io/Process.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_51b16ca4e81f7d00_225_aset,"ANSI","aset",0x6511436c,"ANSI.aset","ANSI.hx",225,0xb96f47db)
HX_LOCAL_STACK_FRAME(_hx_pos_51b16ca4e81f7d00_119_detectSupport,"ANSI","detectSupport",0x97b93101,"ANSI.detectSupport","ANSI.hx",119,0xb96f47db)
static const ::String _hx_array_data_2b3256c3_3[] = {
	HX_("colors",b0,c5,86,c6),
};
HX_LOCAL_STACK_FRAME(_hx_pos_51b16ca4e81f7d00_225_title,"ANSI","title",0xf415f9ad,"ANSI.title","ANSI.hx",225,0xb96f47db)
HX_LOCAL_STACK_FRAME(_hx_pos_51b16ca4e81f7d00_225_deleteLines,"ANSI","deleteLines",0xcf57b3a9,"ANSI.deleteLines","ANSI.hx",225,0xb96f47db)
HX_LOCAL_STACK_FRAME(_hx_pos_51b16ca4e81f7d00_225_reset,"ANSI","reset",0xcaa32de4,"ANSI.reset","ANSI.hx",225,0xb96f47db)
HX_LOCAL_STACK_FRAME(_hx_pos_51b16ca4e81f7d00_225_setX,"ANSI","setX",0x70ec8801,"ANSI.setX","ANSI.hx",225,0xb96f47db)
HX_LOCAL_STACK_FRAME(_hx_pos_51b16ca4e81f7d00_225_moveDownReset,"ANSI","moveDownReset",0xb4ba31d1,"ANSI.moveDownReset","ANSI.hx",225,0xb96f47db)
HX_LOCAL_STACK_FRAME(_hx_pos_51b16ca4e81f7d00_225_deleteLine,"ANSI","deleteLine",0x44a9258a,"ANSI.deleteLine","ANSI.hx",225,0xb96f47db)
HX_LOCAL_STACK_FRAME(_hx_pos_51b16ca4e81f7d00_225_deleteChars,"ANSI","deleteChars",0xa0097287,"ANSI.deleteChars","ANSI.hx",225,0xb96f47db)
HX_LOCAL_STACK_FRAME(_hx_pos_51b16ca4e81f7d00_225_moveUp,"ANSI","moveUp",0x48598217,"ANSI.moveUp","ANSI.hx",225,0xb96f47db)
HX_LOCAL_STACK_FRAME(_hx_pos_51b16ca4e81f7d00_225_showCursor,"ANSI","showCursor",0x5206637e,"ANSI.showCursor","ANSI.hx",225,0xb96f47db)
HX_LOCAL_STACK_FRAME(_hx_pos_51b16ca4e81f7d00_225_insertChar,"ANSI","insertChar",0xd1538e7a,"ANSI.insertChar","ANSI.hx",225,0xb96f47db)
HX_LOCAL_STACK_FRAME(_hx_pos_51b16ca4e81f7d00_225_moveLeft,"ANSI","moveLeft",0x2d548ac3,"ANSI.moveLeft","ANSI.hx",225,0xb96f47db)
HX_LOCAL_STACK_FRAME(_hx_pos_51b16ca4e81f7d00_225_setY,"ANSI","setY",0x70ec8802,"ANSI.setY","ANSI.hx",225,0xb96f47db)
HX_LOCAL_STACK_FRAME(_hx_pos_51b16ca4e81f7d00_225_eraseLine,"ANSI","eraseLine",0x14edaa8f,"ANSI.eraseLine","ANSI.hx",225,0xb96f47db)
HX_LOCAL_STACK_FRAME(_hx_pos_51b16ca4e81f7d00_225_moveRight,"ANSI","moveRight",0xf3b1eda0,"ANSI.moveRight","ANSI.hx",225,0xb96f47db)
HX_LOCAL_STACK_FRAME(_hx_pos_51b16ca4e81f7d00_225_moveUpReset,"ANSI","moveUpReset",0xe61a4438,"ANSI.moveUpReset","ANSI.hx",225,0xb96f47db)
HX_LOCAL_STACK_FRAME(_hx_pos_51b16ca4e81f7d00_225_saveCursor,"ANSI","saveCursor",0x314b49be,"ANSI.saveCursor","ANSI.hx",225,0xb96f47db)
HX_LOCAL_STACK_FRAME(_hx_pos_51b16ca4e81f7d00_225_eraseChars,"ANSI","eraseChars",0x0bb951e2,"ANSI.eraseChars","ANSI.hx",225,0xb96f47db)
HX_LOCAL_STACK_FRAME(_hx_pos_51b16ca4e81f7d00_225_hideCursor,"ANSI","hideCursor",0x80176503,"ANSI.hideCursor","ANSI.hx",225,0xb96f47db)
HX_LOCAL_STACK_FRAME(_hx_pos_51b16ca4e81f7d00_225_setXY,"ANSI","setXY",0x5e0a7938,"ANSI.setXY","ANSI.hx",225,0xb96f47db)
HX_LOCAL_STACK_FRAME(_hx_pos_51b16ca4e81f7d00_225_moveDown,"ANSI","moveDown",0x28127b1e,"ANSI.moveDown","ANSI.hx",225,0xb96f47db)
HX_LOCAL_STACK_FRAME(_hx_pos_51b16ca4e81f7d00_225_eraseDisplay,"ANSI","eraseDisplay",0x55eaea87,"ANSI.eraseDisplay","ANSI.hx",225,0xb96f47db)
HX_LOCAL_STACK_FRAME(_hx_pos_51b16ca4e81f7d00_225_insertLines,"ANSI","insertLines",0x87175ddb,"ANSI.insertLines","ANSI.hx",225,0xb96f47db)
HX_LOCAL_STACK_FRAME(_hx_pos_51b16ca4e81f7d00_225_eraseDisplayToEnd,"ANSI","eraseDisplayToEnd",0x1daeb119,"ANSI.eraseDisplayToEnd","ANSI.hx",225,0xb96f47db)
HX_LOCAL_STACK_FRAME(_hx_pos_51b16ca4e81f7d00_225_eraseLineToEnd,"ANSI","eraseLineToEnd",0x6f8ed411,"ANSI.eraseLineToEnd","ANSI.hx",225,0xb96f47db)
HX_LOCAL_STACK_FRAME(_hx_pos_51b16ca4e81f7d00_225_eraseLineToCursor,"ANSI","eraseLineToCursor",0xae5a4460,"ANSI.eraseLineToCursor","ANSI.hx",225,0xb96f47db)
HX_LOCAL_STACK_FRAME(_hx_pos_51b16ca4e81f7d00_225_insertLine,"ANSI","insertLine",0xd7474798,"ANSI.insertLine","ANSI.hx",225,0xb96f47db)
HX_LOCAL_STACK_FRAME(_hx_pos_51b16ca4e81f7d00_225_insertChars,"ANSI","insertChars",0x57c91cb9,"ANSI.insertChars","ANSI.hx",225,0xb96f47db)
HX_LOCAL_STACK_FRAME(_hx_pos_51b16ca4e81f7d00_225_eraseChar,"ANSI","eraseChar",0x0ef9f171,"ANSI.eraseChar","ANSI.hx",225,0xb96f47db)
HX_LOCAL_STACK_FRAME(_hx_pos_51b16ca4e81f7d00_225_deleteChar,"ANSI","deleteChar",0x3eb56c6c,"ANSI.deleteChar","ANSI.hx",225,0xb96f47db)
HX_LOCAL_STACK_FRAME(_hx_pos_51b16ca4e81f7d00_225_loadCursor,"ANSI","loadCursor",0x9dbced67,"ANSI.loadCursor","ANSI.hx",225,0xb96f47db)
HX_LOCAL_STACK_FRAME(_hx_pos_51b16ca4e81f7d00_225_eraseDisplayToCursor,"ANSI","eraseDisplayToCursor",0x770c3c58,"ANSI.eraseDisplayToCursor","ANSI.hx",225,0xb96f47db)
HX_LOCAL_STACK_FRAME(_hx_pos_51b16ca4e81f7d00_225_resetY,"ANSI","resetY",0x8424f9f5,"ANSI.resetY","ANSI.hx",225,0xb96f47db)
HX_LOCAL_STACK_FRAME(_hx_pos_51b16ca4e81f7d00_60_boot,"ANSI","boot",0x65b779bd,"ANSI.boot","ANSI.hx",60,0xb96f47db)
HX_LOCAL_STACK_FRAME(_hx_pos_51b16ca4e81f7d00_61_boot,"ANSI","boot",0x65b779bd,"ANSI.boot","ANSI.hx",61,0xb96f47db)
HX_LOCAL_STACK_FRAME(_hx_pos_51b16ca4e81f7d00_63_boot,"ANSI","boot",0x65b779bd,"ANSI.boot","ANSI.hx",63,0xb96f47db)
HX_LOCAL_STACK_FRAME(_hx_pos_51b16ca4e81f7d00_65_boot,"ANSI","boot",0x65b779bd,"ANSI.boot","ANSI.hx",65,0xb96f47db)
HX_LOCAL_STACK_FRAME(_hx_pos_51b16ca4e81f7d00_67_boot,"ANSI","boot",0x65b779bd,"ANSI.boot","ANSI.hx",67,0xb96f47db)
HX_LOCAL_STACK_FRAME(_hx_pos_51b16ca4e81f7d00_104_boot,"ANSI","boot",0x65b779bd,"ANSI.boot","ANSI.hx",104,0xb96f47db)
HX_LOCAL_STACK_FRAME(_hx_pos_51b16ca4e81f7d00_105_boot,"ANSI","boot",0x65b779bd,"ANSI.boot","ANSI.hx",105,0xb96f47db)
HX_LOCAL_STACK_FRAME(_hx_pos_51b16ca4e81f7d00_106_boot,"ANSI","boot",0x65b779bd,"ANSI.boot","ANSI.hx",106,0xb96f47db)
HX_LOCAL_STACK_FRAME(_hx_pos_51b16ca4e81f7d00_107_boot,"ANSI","boot",0x65b779bd,"ANSI.boot","ANSI.hx",107,0xb96f47db)
HX_LOCAL_STACK_FRAME(_hx_pos_51b16ca4e81f7d00_154_boot,"ANSI","boot",0x65b779bd,"ANSI.boot","ANSI.hx",154,0xb96f47db)

void ANSI_obj::__construct() { }

Dynamic ANSI_obj::__CreateEmpty() { return new ANSI_obj; }

void *ANSI_obj::_hx_vtable = 0;

Dynamic ANSI_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< ANSI_obj > _hx_result = new ANSI_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool ANSI_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x2b3256c3;
}

::String ANSI_obj::ESCAPE;

::String ANSI_obj::BELL;

::String ANSI_obj::CSI;

 ::Dynamic ANSI_obj::attr;

 ::haxe::ds::EnumValueMap ANSI_obj::values;

 ::Dynamic ANSI_obj::set;

bool ANSI_obj::available;

bool ANSI_obj::strip;

bool ANSI_obj::stripIfUnavailable;

::String ANSI_obj::aset(::cpp::VirtualArray attributes){
            	HX_STACKFRAME(&_hx_pos_51b16ca4e81f7d00_225_aset)
HXLINE( 222)		bool _hx_tmp;
HXDLIN( 222)		if (!(::ANSI_obj::strip)) {
HXLINE( 222)			if (::ANSI_obj::stripIfUnavailable) {
HXLINE( 222)				_hx_tmp = !(::ANSI_obj::available);
            			}
            			else {
HXLINE( 222)				_hx_tmp = false;
            			}
            		}
            		else {
HXLINE( 222)			_hx_tmp = true;
            		}
HXDLIN( 222)		if (_hx_tmp) {
HXLINE( 222)			return HX_("",00,00,00,00);
            		}
HXLINE( 111)		::String _hx_tmp1 = (HX_("\x1b""",1b,00,00,00) + HX_("[",5b,00,00,00));
HXDLIN( 111)		::Array< ::Dynamic> _g = ::Array_obj< ::Dynamic>::__new(0);
HXDLIN( 111)		{
HXLINE( 111)			int _g1 = (int)0;
HXDLIN( 111)			while((_g1 < attributes->get_length())){
HXLINE( 111)				 ::Dynamic arg = attributes->__get(_g1);
HXDLIN( 111)				_g1 = (_g1 + (int)1);
HXLINE( 112)				if (!(::Std_obj::is(arg,hx::ClassOf< ::Attribute >()))) {
HXLINE( 112)					HX_STACK_DO_THROW((HX_("Set argument is not an Attribute: ",cd,c7,d5,d1) + ::Std_obj::string(arg)));
            				}
HXLINE( 111)				_g->push(::ANSI_obj::values->get(arg));
            			}
            		}
HXDLIN( 111)		return ((_hx_tmp1 + _g->join(HX_(";",3b,00,00,00))) + HX_("m",6d,00,00,00));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(ANSI_obj,aset,return )

bool ANSI_obj::detectSupport(){
            	HX_GC_STACKFRAME(&_hx_pos_51b16ca4e81f7d00_119_detectSupport)
HXDLIN( 119)		if ((::Sys_obj::systemName().toLowerCase().indexOf(HX_("window",f0,93,8c,52),null()) == (int)-1)) {
HXLINE( 120)			int result = (int)-1;
HXLINE( 121)			try {
            				HX_STACK_CATCHABLE( ::Dynamic, 0);
HXLINE( 125)				 ::sys::io::Process process =  ::sys::io::Process_obj::__alloc( HX_CTX ,HX_("tput",db,22,02,4d),::Array_obj< ::String >::fromData( _hx_array_data_2b3256c3_3,1));
HXLINE( 126)				result = process->exitCode(null());
HXLINE( 127)				process->close();
            			}
            			catch( ::Dynamic _hx_e){
            				if (_hx_e.IsClass<  ::Dynamic >() ){
            					HX_STACK_BEGIN_CATCH
            					 ::Dynamic e = _hx_e;
            				}
            				else {
            					HX_STACK_DO_THROW(_hx_e);
            				}
            			}
HXLINE( 130)			return (result == (int)0);
            		}
            		else {
HXLINE( 132)			return hx::IsNotNull( ::Sys_obj::getEnv(HX_("ANSICON",3f,21,7f,b9)) );
            		}
HXLINE( 119)		return false;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(ANSI_obj,detectSupport,return )

::String ANSI_obj::title(::String str){
            	HX_STACKFRAME(&_hx_pos_51b16ca4e81f7d00_225_title)
HXLINE( 222)		bool _hx_tmp;
HXDLIN( 222)		if (!(::ANSI_obj::strip)) {
HXLINE( 222)			if (::ANSI_obj::stripIfUnavailable) {
HXLINE( 222)				_hx_tmp = !(::ANSI_obj::available);
            			}
            			else {
HXLINE( 222)				_hx_tmp = false;
            			}
            		}
            		else {
HXLINE( 222)			_hx_tmp = true;
            		}
HXDLIN( 222)		if (_hx_tmp) {
HXLINE( 222)			return HX_("",00,00,00,00);
            		}
HXLINE( 141)		return (((HX_("\x1b""",1b,00,00,00) + HX_("]0;",a8,bb,46,00)) + str) + HX_("\x07""",07,00,00,00));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(ANSI_obj,title,return )

 ::haxe::ds::StringMap ANSI_obj::sequences;

::String ANSI_obj::deleteLines(hx::Null< int >  __o_num){
int num = __o_num.Default(1);
            	HX_STACKFRAME(&_hx_pos_51b16ca4e81f7d00_225_deleteLines)
HXLINE( 222)		bool _hx_tmp;
HXDLIN( 222)		if (!(::ANSI_obj::strip)) {
HXLINE( 222)			if (::ANSI_obj::stripIfUnavailable) {
HXLINE( 222)				_hx_tmp = !(::ANSI_obj::available);
            			}
            			else {
HXLINE( 222)				_hx_tmp = false;
            			}
            		}
            		else {
HXLINE( 222)			_hx_tmp = true;
            		}
HXDLIN( 222)		if (_hx_tmp) {
HXLINE( 222)			return HX_("",00,00,00,00);
            		}
HXLINE( 253)		return ((HX_("\x1b""[",e0,17,00,00) + num) + HX_("M",4d,00,00,00));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(ANSI_obj,deleteLines,return )

::String ANSI_obj::reset(){
            	HX_STACKFRAME(&_hx_pos_51b16ca4e81f7d00_225_reset)
HXLINE( 222)		bool _hx_tmp;
HXDLIN( 222)		if (!(::ANSI_obj::strip)) {
HXLINE( 222)			if (::ANSI_obj::stripIfUnavailable) {
HXLINE( 222)				_hx_tmp = !(::ANSI_obj::available);
            			}
            			else {
HXLINE( 222)				_hx_tmp = false;
            			}
            		}
            		else {
HXLINE( 222)			_hx_tmp = true;
            		}
HXDLIN( 222)		if (_hx_tmp) {
HXLINE( 222)			return HX_("",00,00,00,00);
            		}
HXLINE( 249)		return HX_("\x1b""[H",68,cc,14,00);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(ANSI_obj,reset,return )

::String ANSI_obj::setX(hx::Null< int >  __o_num){
int num = __o_num.Default(1);
            	HX_STACKFRAME(&_hx_pos_51b16ca4e81f7d00_225_setX)
HXLINE( 222)		bool _hx_tmp;
HXDLIN( 222)		if (!(::ANSI_obj::strip)) {
HXLINE( 222)			if (::ANSI_obj::stripIfUnavailable) {
HXLINE( 222)				_hx_tmp = !(::ANSI_obj::available);
            			}
            			else {
HXLINE( 222)				_hx_tmp = false;
            			}
            		}
            		else {
HXLINE( 222)			_hx_tmp = true;
            		}
HXDLIN( 222)		if (_hx_tmp) {
HXLINE( 222)			return HX_("",00,00,00,00);
            		}
HXLINE( 253)		return ((HX_("\x1b""[",e0,17,00,00) + num) + HX_("G",47,00,00,00));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(ANSI_obj,setX,return )

::String ANSI_obj::moveDownReset(hx::Null< int >  __o_num){
int num = __o_num.Default(1);
            	HX_STACKFRAME(&_hx_pos_51b16ca4e81f7d00_225_moveDownReset)
HXLINE( 222)		bool _hx_tmp;
HXDLIN( 222)		if (!(::ANSI_obj::strip)) {
HXLINE( 222)			if (::ANSI_obj::stripIfUnavailable) {
HXLINE( 222)				_hx_tmp = !(::ANSI_obj::available);
            			}
            			else {
HXLINE( 222)				_hx_tmp = false;
            			}
            		}
            		else {
HXLINE( 222)			_hx_tmp = true;
            		}
HXDLIN( 222)		if (_hx_tmp) {
HXLINE( 222)			return HX_("",00,00,00,00);
            		}
HXLINE( 253)		return ((HX_("\x1b""[",e0,17,00,00) + num) + HX_("E",45,00,00,00));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(ANSI_obj,moveDownReset,return )

::String ANSI_obj::deleteLine(){
            	HX_STACKFRAME(&_hx_pos_51b16ca4e81f7d00_225_deleteLine)
HXLINE( 222)		bool _hx_tmp;
HXDLIN( 222)		if (!(::ANSI_obj::strip)) {
HXLINE( 222)			if (::ANSI_obj::stripIfUnavailable) {
HXLINE( 222)				_hx_tmp = !(::ANSI_obj::available);
            			}
            			else {
HXLINE( 222)				_hx_tmp = false;
            			}
            		}
            		else {
HXLINE( 222)			_hx_tmp = true;
            		}
HXDLIN( 222)		if (_hx_tmp) {
HXLINE( 222)			return HX_("",00,00,00,00);
            		}
HXLINE( 249)		return HX_("\x1b""[M",6d,cc,14,00);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(ANSI_obj,deleteLine,return )

::String ANSI_obj::deleteChars(hx::Null< int >  __o_num){
int num = __o_num.Default(1);
            	HX_STACKFRAME(&_hx_pos_51b16ca4e81f7d00_225_deleteChars)
HXLINE( 222)		bool _hx_tmp;
HXDLIN( 222)		if (!(::ANSI_obj::strip)) {
HXLINE( 222)			if (::ANSI_obj::stripIfUnavailable) {
HXLINE( 222)				_hx_tmp = !(::ANSI_obj::available);
            			}
            			else {
HXLINE( 222)				_hx_tmp = false;
            			}
            		}
            		else {
HXLINE( 222)			_hx_tmp = true;
            		}
HXDLIN( 222)		if (_hx_tmp) {
HXLINE( 222)			return HX_("",00,00,00,00);
            		}
HXLINE( 253)		return ((HX_("\x1b""[",e0,17,00,00) + num) + HX_("P",50,00,00,00));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(ANSI_obj,deleteChars,return )

::String ANSI_obj::moveUp(hx::Null< int >  __o_num){
int num = __o_num.Default(1);
            	HX_STACKFRAME(&_hx_pos_51b16ca4e81f7d00_225_moveUp)
HXLINE( 222)		bool _hx_tmp;
HXDLIN( 222)		if (!(::ANSI_obj::strip)) {
HXLINE( 222)			if (::ANSI_obj::stripIfUnavailable) {
HXLINE( 222)				_hx_tmp = !(::ANSI_obj::available);
            			}
            			else {
HXLINE( 222)				_hx_tmp = false;
            			}
            		}
            		else {
HXLINE( 222)			_hx_tmp = true;
            		}
HXDLIN( 222)		if (_hx_tmp) {
HXLINE( 222)			return HX_("",00,00,00,00);
            		}
HXLINE( 253)		return ((HX_("\x1b""[",e0,17,00,00) + num) + HX_("A",41,00,00,00));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(ANSI_obj,moveUp,return )

::String ANSI_obj::showCursor(){
            	HX_STACKFRAME(&_hx_pos_51b16ca4e81f7d00_225_showCursor)
HXLINE( 222)		bool _hx_tmp;
HXDLIN( 222)		if (!(::ANSI_obj::strip)) {
HXLINE( 222)			if (::ANSI_obj::stripIfUnavailable) {
HXLINE( 222)				_hx_tmp = !(::ANSI_obj::available);
            			}
            			else {
HXLINE( 222)				_hx_tmp = false;
            			}
            		}
            		else {
HXLINE( 222)			_hx_tmp = true;
            		}
HXDLIN( 222)		if (_hx_tmp) {
HXLINE( 222)			return HX_("",00,00,00,00);
            		}
HXLINE( 249)		return HX_("\x1b""[?25h",46,18,e4,5a);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(ANSI_obj,showCursor,return )

::String ANSI_obj::insertChar(){
            	HX_STACKFRAME(&_hx_pos_51b16ca4e81f7d00_225_insertChar)
HXLINE( 222)		bool _hx_tmp;
HXDLIN( 222)		if (!(::ANSI_obj::strip)) {
HXLINE( 222)			if (::ANSI_obj::stripIfUnavailable) {
HXLINE( 222)				_hx_tmp = !(::ANSI_obj::available);
            			}
            			else {
HXLINE( 222)				_hx_tmp = false;
            			}
            		}
            		else {
HXLINE( 222)			_hx_tmp = true;
            		}
HXDLIN( 222)		if (_hx_tmp) {
HXLINE( 222)			return HX_("",00,00,00,00);
            		}
HXLINE( 249)		return HX_("\x1b""[@",60,cc,14,00);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(ANSI_obj,insertChar,return )

::String ANSI_obj::moveLeft(hx::Null< int >  __o_num){
int num = __o_num.Default(1);
            	HX_STACKFRAME(&_hx_pos_51b16ca4e81f7d00_225_moveLeft)
HXLINE( 222)		bool _hx_tmp;
HXDLIN( 222)		if (!(::ANSI_obj::strip)) {
HXLINE( 222)			if (::ANSI_obj::stripIfUnavailable) {
HXLINE( 222)				_hx_tmp = !(::ANSI_obj::available);
            			}
            			else {
HXLINE( 222)				_hx_tmp = false;
            			}
            		}
            		else {
HXLINE( 222)			_hx_tmp = true;
            		}
HXDLIN( 222)		if (_hx_tmp) {
HXLINE( 222)			return HX_("",00,00,00,00);
            		}
HXLINE( 253)		return ((HX_("\x1b""[",e0,17,00,00) + num) + HX_("D",44,00,00,00));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(ANSI_obj,moveLeft,return )

::String ANSI_obj::setY(hx::Null< int >  __o_num){
int num = __o_num.Default(1);
            	HX_STACKFRAME(&_hx_pos_51b16ca4e81f7d00_225_setY)
HXLINE( 222)		bool _hx_tmp;
HXDLIN( 222)		if (!(::ANSI_obj::strip)) {
HXLINE( 222)			if (::ANSI_obj::stripIfUnavailable) {
HXLINE( 222)				_hx_tmp = !(::ANSI_obj::available);
            			}
            			else {
HXLINE( 222)				_hx_tmp = false;
            			}
            		}
            		else {
HXLINE( 222)			_hx_tmp = true;
            		}
HXDLIN( 222)		if (_hx_tmp) {
HXLINE( 222)			return HX_("",00,00,00,00);
            		}
HXLINE( 253)		return ((HX_("\x1b""[",e0,17,00,00) + num) + HX_("d",64,00,00,00));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(ANSI_obj,setY,return )

::String ANSI_obj::eraseLine(){
            	HX_STACKFRAME(&_hx_pos_51b16ca4e81f7d00_225_eraseLine)
HXLINE( 222)		bool _hx_tmp;
HXDLIN( 222)		if (!(::ANSI_obj::strip)) {
HXLINE( 222)			if (::ANSI_obj::stripIfUnavailable) {
HXLINE( 222)				_hx_tmp = !(::ANSI_obj::available);
            			}
            			else {
HXLINE( 222)				_hx_tmp = false;
            			}
            		}
            		else {
HXLINE( 222)			_hx_tmp = true;
            		}
HXDLIN( 222)		if (_hx_tmp) {
HXLINE( 222)			return HX_("",00,00,00,00);
            		}
HXLINE( 249)		return HX_("\x1b""[2K",b9,fb,1d,12);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(ANSI_obj,eraseLine,return )

::String ANSI_obj::moveRight(hx::Null< int >  __o_num){
int num = __o_num.Default(1);
            	HX_STACKFRAME(&_hx_pos_51b16ca4e81f7d00_225_moveRight)
HXLINE( 222)		bool _hx_tmp;
HXDLIN( 222)		if (!(::ANSI_obj::strip)) {
HXLINE( 222)			if (::ANSI_obj::stripIfUnavailable) {
HXLINE( 222)				_hx_tmp = !(::ANSI_obj::available);
            			}
            			else {
HXLINE( 222)				_hx_tmp = false;
            			}
            		}
            		else {
HXLINE( 222)			_hx_tmp = true;
            		}
HXDLIN( 222)		if (_hx_tmp) {
HXLINE( 222)			return HX_("",00,00,00,00);
            		}
HXLINE( 253)		return ((HX_("\x1b""[",e0,17,00,00) + num) + HX_("C",43,00,00,00));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(ANSI_obj,moveRight,return )

::String ANSI_obj::moveUpReset(hx::Null< int >  __o_num){
int num = __o_num.Default(1);
            	HX_STACKFRAME(&_hx_pos_51b16ca4e81f7d00_225_moveUpReset)
HXLINE( 222)		bool _hx_tmp;
HXDLIN( 222)		if (!(::ANSI_obj::strip)) {
HXLINE( 222)			if (::ANSI_obj::stripIfUnavailable) {
HXLINE( 222)				_hx_tmp = !(::ANSI_obj::available);
            			}
            			else {
HXLINE( 222)				_hx_tmp = false;
            			}
            		}
            		else {
HXLINE( 222)			_hx_tmp = true;
            		}
HXDLIN( 222)		if (_hx_tmp) {
HXLINE( 222)			return HX_("",00,00,00,00);
            		}
HXLINE( 253)		return ((HX_("\x1b""[",e0,17,00,00) + num) + HX_("F",46,00,00,00));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(ANSI_obj,moveUpReset,return )

::String ANSI_obj::saveCursor(){
            	HX_STACKFRAME(&_hx_pos_51b16ca4e81f7d00_225_saveCursor)
HXLINE( 222)		bool _hx_tmp;
HXDLIN( 222)		if (!(::ANSI_obj::strip)) {
HXLINE( 222)			if (::ANSI_obj::stripIfUnavailable) {
HXLINE( 222)				_hx_tmp = !(::ANSI_obj::available);
            			}
            			else {
HXLINE( 222)				_hx_tmp = false;
            			}
            		}
            		else {
HXLINE( 222)			_hx_tmp = true;
            		}
HXDLIN( 222)		if (_hx_tmp) {
HXLINE( 222)			return HX_("",00,00,00,00);
            		}
HXLINE( 249)		return HX_("\x1b""[s",93,cc,14,00);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(ANSI_obj,saveCursor,return )

::String ANSI_obj::eraseChars(hx::Null< int >  __o_num){
int num = __o_num.Default(1);
            	HX_STACKFRAME(&_hx_pos_51b16ca4e81f7d00_225_eraseChars)
HXLINE( 222)		bool _hx_tmp;
HXDLIN( 222)		if (!(::ANSI_obj::strip)) {
HXLINE( 222)			if (::ANSI_obj::stripIfUnavailable) {
HXLINE( 222)				_hx_tmp = !(::ANSI_obj::available);
            			}
            			else {
HXLINE( 222)				_hx_tmp = false;
            			}
            		}
            		else {
HXLINE( 222)			_hx_tmp = true;
            		}
HXDLIN( 222)		if (_hx_tmp) {
HXLINE( 222)			return HX_("",00,00,00,00);
            		}
HXLINE( 253)		return ((HX_("\x1b""[",e0,17,00,00) + num) + HX_("X",58,00,00,00));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(ANSI_obj,eraseChars,return )

::String ANSI_obj::hideCursor(){
            	HX_STACKFRAME(&_hx_pos_51b16ca4e81f7d00_225_hideCursor)
HXLINE( 222)		bool _hx_tmp;
HXDLIN( 222)		if (!(::ANSI_obj::strip)) {
HXLINE( 222)			if (::ANSI_obj::stripIfUnavailable) {
HXLINE( 222)				_hx_tmp = !(::ANSI_obj::available);
            			}
            			else {
HXLINE( 222)				_hx_tmp = false;
            			}
            		}
            		else {
HXLINE( 222)			_hx_tmp = true;
            		}
HXDLIN( 222)		if (_hx_tmp) {
HXLINE( 222)			return HX_("",00,00,00,00);
            		}
HXLINE( 249)		return HX_("\x1b""[?25l",4a,18,e4,5a);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(ANSI_obj,hideCursor,return )

::String ANSI_obj::setXY(int column,int line){
            	HX_STACKFRAME(&_hx_pos_51b16ca4e81f7d00_225_setXY)
HXLINE( 222)		bool _hx_tmp;
HXDLIN( 222)		if (!(::ANSI_obj::strip)) {
HXLINE( 222)			if (::ANSI_obj::stripIfUnavailable) {
HXLINE( 222)				_hx_tmp = !(::ANSI_obj::available);
            			}
            			else {
HXLINE( 222)				_hx_tmp = false;
            			}
            		}
            		else {
HXLINE( 222)			_hx_tmp = true;
            		}
HXDLIN( 222)		if (_hx_tmp) {
HXLINE( 222)			return HX_("",00,00,00,00);
            		}
HXLINE( 267)		return ((((HX_("\x1b""[",e0,17,00,00) + line) + HX_(";",3b,00,00,00)) + column) + HX_("H",48,00,00,00));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(ANSI_obj,setXY,return )

::String ANSI_obj::moveDown(hx::Null< int >  __o_num){
int num = __o_num.Default(1);
            	HX_STACKFRAME(&_hx_pos_51b16ca4e81f7d00_225_moveDown)
HXLINE( 222)		bool _hx_tmp;
HXDLIN( 222)		if (!(::ANSI_obj::strip)) {
HXLINE( 222)			if (::ANSI_obj::stripIfUnavailable) {
HXLINE( 222)				_hx_tmp = !(::ANSI_obj::available);
            			}
            			else {
HXLINE( 222)				_hx_tmp = false;
            			}
            		}
            		else {
HXLINE( 222)			_hx_tmp = true;
            		}
HXDLIN( 222)		if (_hx_tmp) {
HXLINE( 222)			return HX_("",00,00,00,00);
            		}
HXLINE( 253)		return ((HX_("\x1b""[",e0,17,00,00) + num) + HX_("B",42,00,00,00));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(ANSI_obj,moveDown,return )

::String ANSI_obj::eraseDisplay(){
            	HX_STACKFRAME(&_hx_pos_51b16ca4e81f7d00_225_eraseDisplay)
HXLINE( 222)		bool _hx_tmp;
HXDLIN( 222)		if (!(::ANSI_obj::strip)) {
HXLINE( 222)			if (::ANSI_obj::stripIfUnavailable) {
HXLINE( 222)				_hx_tmp = !(::ANSI_obj::available);
            			}
            			else {
HXLINE( 222)				_hx_tmp = false;
            			}
            		}
            		else {
HXLINE( 222)			_hx_tmp = true;
            		}
HXDLIN( 222)		if (_hx_tmp) {
HXLINE( 222)			return HX_("",00,00,00,00);
            		}
HXLINE( 249)		return HX_("\x1b""[2J",b8,fb,1d,12);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(ANSI_obj,eraseDisplay,return )

::String ANSI_obj::insertLines(hx::Null< int >  __o_num){
int num = __o_num.Default(1);
            	HX_STACKFRAME(&_hx_pos_51b16ca4e81f7d00_225_insertLines)
HXLINE( 222)		bool _hx_tmp;
HXDLIN( 222)		if (!(::ANSI_obj::strip)) {
HXLINE( 222)			if (::ANSI_obj::stripIfUnavailable) {
HXLINE( 222)				_hx_tmp = !(::ANSI_obj::available);
            			}
            			else {
HXLINE( 222)				_hx_tmp = false;
            			}
            		}
            		else {
HXLINE( 222)			_hx_tmp = true;
            		}
HXDLIN( 222)		if (_hx_tmp) {
HXLINE( 222)			return HX_("",00,00,00,00);
            		}
HXLINE( 253)		return ((HX_("\x1b""[",e0,17,00,00) + num) + HX_("L",4c,00,00,00));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(ANSI_obj,insertLines,return )

::String ANSI_obj::eraseDisplayToEnd(){
            	HX_STACKFRAME(&_hx_pos_51b16ca4e81f7d00_225_eraseDisplayToEnd)
HXLINE( 222)		bool _hx_tmp;
HXDLIN( 222)		if (!(::ANSI_obj::strip)) {
HXLINE( 222)			if (::ANSI_obj::stripIfUnavailable) {
HXLINE( 222)				_hx_tmp = !(::ANSI_obj::available);
            			}
            			else {
HXLINE( 222)				_hx_tmp = false;
            			}
            		}
            		else {
HXLINE( 222)			_hx_tmp = true;
            		}
HXDLIN( 222)		if (_hx_tmp) {
HXLINE( 222)			return HX_("",00,00,00,00);
            		}
HXLINE( 249)		return HX_("\x1b""[J",6a,cc,14,00);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(ANSI_obj,eraseDisplayToEnd,return )

::String ANSI_obj::eraseLineToEnd(){
            	HX_STACKFRAME(&_hx_pos_51b16ca4e81f7d00_225_eraseLineToEnd)
HXLINE( 222)		bool _hx_tmp;
HXDLIN( 222)		if (!(::ANSI_obj::strip)) {
HXLINE( 222)			if (::ANSI_obj::stripIfUnavailable) {
HXLINE( 222)				_hx_tmp = !(::ANSI_obj::available);
            			}
            			else {
HXLINE( 222)				_hx_tmp = false;
            			}
            		}
            		else {
HXLINE( 222)			_hx_tmp = true;
            		}
HXDLIN( 222)		if (_hx_tmp) {
HXLINE( 222)			return HX_("",00,00,00,00);
            		}
HXLINE( 249)		return HX_("\x1b""[K",6b,cc,14,00);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(ANSI_obj,eraseLineToEnd,return )

::String ANSI_obj::eraseLineToCursor(){
            	HX_STACKFRAME(&_hx_pos_51b16ca4e81f7d00_225_eraseLineToCursor)
HXLINE( 222)		bool _hx_tmp;
HXDLIN( 222)		if (!(::ANSI_obj::strip)) {
HXLINE( 222)			if (::ANSI_obj::stripIfUnavailable) {
HXLINE( 222)				_hx_tmp = !(::ANSI_obj::available);
            			}
            			else {
HXLINE( 222)				_hx_tmp = false;
            			}
            		}
            		else {
HXLINE( 222)			_hx_tmp = true;
            		}
HXDLIN( 222)		if (_hx_tmp) {
HXLINE( 222)			return HX_("",00,00,00,00);
            		}
HXLINE( 249)		return HX_("\x1b""[1K",da,fa,1d,12);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(ANSI_obj,eraseLineToCursor,return )

::String ANSI_obj::insertLine(){
            	HX_STACKFRAME(&_hx_pos_51b16ca4e81f7d00_225_insertLine)
HXLINE( 222)		bool _hx_tmp;
HXDLIN( 222)		if (!(::ANSI_obj::strip)) {
HXLINE( 222)			if (::ANSI_obj::stripIfUnavailable) {
HXLINE( 222)				_hx_tmp = !(::ANSI_obj::available);
            			}
            			else {
HXLINE( 222)				_hx_tmp = false;
            			}
            		}
            		else {
HXLINE( 222)			_hx_tmp = true;
            		}
HXDLIN( 222)		if (_hx_tmp) {
HXLINE( 222)			return HX_("",00,00,00,00);
            		}
HXLINE( 249)		return HX_("\x1b""[L",6c,cc,14,00);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(ANSI_obj,insertLine,return )

::String ANSI_obj::insertChars(hx::Null< int >  __o_num){
int num = __o_num.Default(1);
            	HX_STACKFRAME(&_hx_pos_51b16ca4e81f7d00_225_insertChars)
HXLINE( 222)		bool _hx_tmp;
HXDLIN( 222)		if (!(::ANSI_obj::strip)) {
HXLINE( 222)			if (::ANSI_obj::stripIfUnavailable) {
HXLINE( 222)				_hx_tmp = !(::ANSI_obj::available);
            			}
            			else {
HXLINE( 222)				_hx_tmp = false;
            			}
            		}
            		else {
HXLINE( 222)			_hx_tmp = true;
            		}
HXDLIN( 222)		if (_hx_tmp) {
HXLINE( 222)			return HX_("",00,00,00,00);
            		}
HXLINE( 253)		return ((HX_("\x1b""[",e0,17,00,00) + num) + HX_("@",40,00,00,00));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(ANSI_obj,insertChars,return )

::String ANSI_obj::eraseChar(){
            	HX_STACKFRAME(&_hx_pos_51b16ca4e81f7d00_225_eraseChar)
HXLINE( 222)		bool _hx_tmp;
HXDLIN( 222)		if (!(::ANSI_obj::strip)) {
HXLINE( 222)			if (::ANSI_obj::stripIfUnavailable) {
HXLINE( 222)				_hx_tmp = !(::ANSI_obj::available);
            			}
            			else {
HXLINE( 222)				_hx_tmp = false;
            			}
            		}
            		else {
HXLINE( 222)			_hx_tmp = true;
            		}
HXDLIN( 222)		if (_hx_tmp) {
HXLINE( 222)			return HX_("",00,00,00,00);
            		}
HXLINE( 249)		return HX_("\x1b""[X",78,cc,14,00);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(ANSI_obj,eraseChar,return )

::String ANSI_obj::deleteChar(){
            	HX_STACKFRAME(&_hx_pos_51b16ca4e81f7d00_225_deleteChar)
HXLINE( 222)		bool _hx_tmp;
HXDLIN( 222)		if (!(::ANSI_obj::strip)) {
HXLINE( 222)			if (::ANSI_obj::stripIfUnavailable) {
HXLINE( 222)				_hx_tmp = !(::ANSI_obj::available);
            			}
            			else {
HXLINE( 222)				_hx_tmp = false;
            			}
            		}
            		else {
HXLINE( 222)			_hx_tmp = true;
            		}
HXDLIN( 222)		if (_hx_tmp) {
HXLINE( 222)			return HX_("",00,00,00,00);
            		}
HXLINE( 249)		return HX_("\x1b""[P",70,cc,14,00);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(ANSI_obj,deleteChar,return )

::String ANSI_obj::loadCursor(){
            	HX_STACKFRAME(&_hx_pos_51b16ca4e81f7d00_225_loadCursor)
HXLINE( 222)		bool _hx_tmp;
HXDLIN( 222)		if (!(::ANSI_obj::strip)) {
HXLINE( 222)			if (::ANSI_obj::stripIfUnavailable) {
HXLINE( 222)				_hx_tmp = !(::ANSI_obj::available);
            			}
            			else {
HXLINE( 222)				_hx_tmp = false;
            			}
            		}
            		else {
HXLINE( 222)			_hx_tmp = true;
            		}
HXDLIN( 222)		if (_hx_tmp) {
HXLINE( 222)			return HX_("",00,00,00,00);
            		}
HXLINE( 249)		return HX_("\x1b""[u",95,cc,14,00);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(ANSI_obj,loadCursor,return )

::String ANSI_obj::eraseDisplayToCursor(){
            	HX_STACKFRAME(&_hx_pos_51b16ca4e81f7d00_225_eraseDisplayToCursor)
HXLINE( 222)		bool _hx_tmp;
HXDLIN( 222)		if (!(::ANSI_obj::strip)) {
HXLINE( 222)			if (::ANSI_obj::stripIfUnavailable) {
HXLINE( 222)				_hx_tmp = !(::ANSI_obj::available);
            			}
            			else {
HXLINE( 222)				_hx_tmp = false;
            			}
            		}
            		else {
HXLINE( 222)			_hx_tmp = true;
            		}
HXDLIN( 222)		if (_hx_tmp) {
HXLINE( 222)			return HX_("",00,00,00,00);
            		}
HXLINE( 249)		return HX_("\x1b""[1J",d9,fa,1d,12);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(ANSI_obj,eraseDisplayToCursor,return )

::String ANSI_obj::resetY(hx::Null< int >  __o_num){
int num = __o_num.Default(1);
            	HX_STACKFRAME(&_hx_pos_51b16ca4e81f7d00_225_resetY)
HXLINE( 222)		bool _hx_tmp;
HXDLIN( 222)		if (!(::ANSI_obj::strip)) {
HXLINE( 222)			if (::ANSI_obj::stripIfUnavailable) {
HXLINE( 222)				_hx_tmp = !(::ANSI_obj::available);
            			}
            			else {
HXLINE( 222)				_hx_tmp = false;
            			}
            		}
            		else {
HXLINE( 222)			_hx_tmp = true;
            		}
HXDLIN( 222)		if (_hx_tmp) {
HXLINE( 222)			return HX_("",00,00,00,00);
            		}
HXLINE( 253)		return ((HX_("\x1b""[",e0,17,00,00) + num) + HX_("H",48,00,00,00));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(ANSI_obj,resetY,return )


ANSI_obj::ANSI_obj()
{
}

bool ANSI_obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 3:
		if (HX_FIELD_EQ(inName,"set") ) { outValue = ( set ); return true; }
		break;
	case 4:
		if (HX_FIELD_EQ(inName,"attr") ) { outValue = ( attr ); return true; }
		if (HX_FIELD_EQ(inName,"aset") ) { outValue = aset_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"setX") ) { outValue = setX_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"setY") ) { outValue = setY_dyn(); return true; }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"strip") ) { outValue = ( strip ); return true; }
		if (HX_FIELD_EQ(inName,"title") ) { outValue = title_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"reset") ) { outValue = reset_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"setXY") ) { outValue = setXY_dyn(); return true; }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"values") ) { outValue = ( values ); return true; }
		if (HX_FIELD_EQ(inName,"moveUp") ) { outValue = moveUp_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"resetY") ) { outValue = resetY_dyn(); return true; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"moveLeft") ) { outValue = moveLeft_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"moveDown") ) { outValue = moveDown_dyn(); return true; }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"available") ) { outValue = ( available ); return true; }
		if (HX_FIELD_EQ(inName,"sequences") ) { outValue = ( sequences ); return true; }
		if (HX_FIELD_EQ(inName,"eraseLine") ) { outValue = eraseLine_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"moveRight") ) { outValue = moveRight_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"eraseChar") ) { outValue = eraseChar_dyn(); return true; }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"deleteLine") ) { outValue = deleteLine_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"showCursor") ) { outValue = showCursor_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"insertChar") ) { outValue = insertChar_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"saveCursor") ) { outValue = saveCursor_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"eraseChars") ) { outValue = eraseChars_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"hideCursor") ) { outValue = hideCursor_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"insertLine") ) { outValue = insertLine_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"deleteChar") ) { outValue = deleteChar_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"loadCursor") ) { outValue = loadCursor_dyn(); return true; }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"deleteLines") ) { outValue = deleteLines_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"deleteChars") ) { outValue = deleteChars_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"moveUpReset") ) { outValue = moveUpReset_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"insertLines") ) { outValue = insertLines_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"insertChars") ) { outValue = insertChars_dyn(); return true; }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"eraseDisplay") ) { outValue = eraseDisplay_dyn(); return true; }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"detectSupport") ) { outValue = detectSupport_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"moveDownReset") ) { outValue = moveDownReset_dyn(); return true; }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"eraseLineToEnd") ) { outValue = eraseLineToEnd_dyn(); return true; }
		break;
	case 17:
		if (HX_FIELD_EQ(inName,"eraseDisplayToEnd") ) { outValue = eraseDisplayToEnd_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"eraseLineToCursor") ) { outValue = eraseLineToCursor_dyn(); return true; }
		break;
	case 18:
		if (HX_FIELD_EQ(inName,"stripIfUnavailable") ) { outValue = ( stripIfUnavailable ); return true; }
		break;
	case 20:
		if (HX_FIELD_EQ(inName,"eraseDisplayToCursor") ) { outValue = eraseDisplayToCursor_dyn(); return true; }
	}
	return false;
}

bool ANSI_obj::__SetStatic(const ::String &inName,Dynamic &ioValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 3:
		if (HX_FIELD_EQ(inName,"set") ) { set=ioValue.Cast<  ::Dynamic >(); return true; }
		break;
	case 4:
		if (HX_FIELD_EQ(inName,"attr") ) { attr=ioValue.Cast<  ::Dynamic >(); return true; }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"strip") ) { strip=ioValue.Cast< bool >(); return true; }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"values") ) { values=ioValue.Cast<  ::haxe::ds::EnumValueMap >(); return true; }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"available") ) { available=ioValue.Cast< bool >(); return true; }
		if (HX_FIELD_EQ(inName,"sequences") ) { sequences=ioValue.Cast<  ::haxe::ds::StringMap >(); return true; }
		break;
	case 18:
		if (HX_FIELD_EQ(inName,"stripIfUnavailable") ) { stripIfUnavailable=ioValue.Cast< bool >(); return true; }
	}
	return false;
}

#if HXCPP_SCRIPTABLE
static hx::StorageInfo *ANSI_obj_sMemberStorageInfo = 0;
static hx::StaticInfo ANSI_obj_sStaticStorageInfo[] = {
	{hx::fsString,(void *) &ANSI_obj::ESCAPE,HX_HCSTRING("ESCAPE","\x81","\xef","\x5c","\x8d")},
	{hx::fsString,(void *) &ANSI_obj::BELL,HX_HCSTRING("BELL","\x03","\xb3","\xd4","\x2b")},
	{hx::fsString,(void *) &ANSI_obj::CSI,HX_HCSTRING("CSI","\x99","\x1f","\x33","\x00")},
	{hx::fsObject /*Dynamic*/ ,(void *) &ANSI_obj::attr,HX_HCSTRING("attr","\x31","\x1d","\x76","\x40")},
	{hx::fsObject /*::haxe::ds::EnumValueMap*/ ,(void *) &ANSI_obj::values,HX_HCSTRING("values","\xe2","\x03","\xb7","\x4f")},
	{hx::fsObject /*Dynamic*/ ,(void *) &ANSI_obj::set,HX_HCSTRING("set","\xa2","\x9b","\x57","\x00")},
	{hx::fsBool,(void *) &ANSI_obj::available,HX_HCSTRING("available","\xc9","\x59","\x83","\x77")},
	{hx::fsBool,(void *) &ANSI_obj::strip,HX_HCSTRING("strip","\xd8","\x52","\x18","\x84")},
	{hx::fsBool,(void *) &ANSI_obj::stripIfUnavailable,HX_HCSTRING("stripIfUnavailable","\x7b","\xb5","\x60","\x8b")},
	{hx::fsObject /*::haxe::ds::StringMap*/ ,(void *) &ANSI_obj::sequences,HX_HCSTRING("sequences","\x12","\x5b","\x8d","\xe6")},
	{ hx::fsUnknown, 0, null()}
};
#endif

static void ANSI_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(ANSI_obj::__mClass,"__mClass");
	HX_MARK_MEMBER_NAME(ANSI_obj::ESCAPE,"ESCAPE");
	HX_MARK_MEMBER_NAME(ANSI_obj::BELL,"BELL");
	HX_MARK_MEMBER_NAME(ANSI_obj::CSI,"CSI");
	HX_MARK_MEMBER_NAME(ANSI_obj::attr,"attr");
	HX_MARK_MEMBER_NAME(ANSI_obj::values,"values");
	HX_MARK_MEMBER_NAME(ANSI_obj::set,"set");
	HX_MARK_MEMBER_NAME(ANSI_obj::available,"available");
	HX_MARK_MEMBER_NAME(ANSI_obj::strip,"strip");
	HX_MARK_MEMBER_NAME(ANSI_obj::stripIfUnavailable,"stripIfUnavailable");
	HX_MARK_MEMBER_NAME(ANSI_obj::sequences,"sequences");
};

#ifdef HXCPP_VISIT_ALLOCS
static void ANSI_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(ANSI_obj::__mClass,"__mClass");
	HX_VISIT_MEMBER_NAME(ANSI_obj::ESCAPE,"ESCAPE");
	HX_VISIT_MEMBER_NAME(ANSI_obj::BELL,"BELL");
	HX_VISIT_MEMBER_NAME(ANSI_obj::CSI,"CSI");
	HX_VISIT_MEMBER_NAME(ANSI_obj::attr,"attr");
	HX_VISIT_MEMBER_NAME(ANSI_obj::values,"values");
	HX_VISIT_MEMBER_NAME(ANSI_obj::set,"set");
	HX_VISIT_MEMBER_NAME(ANSI_obj::available,"available");
	HX_VISIT_MEMBER_NAME(ANSI_obj::strip,"strip");
	HX_VISIT_MEMBER_NAME(ANSI_obj::stripIfUnavailable,"stripIfUnavailable");
	HX_VISIT_MEMBER_NAME(ANSI_obj::sequences,"sequences");
};

#endif

hx::Class ANSI_obj::__mClass;

static ::String ANSI_obj_sStaticFields[] = {
	HX_HCSTRING("ESCAPE","\x81","\xef","\x5c","\x8d"),
	HX_HCSTRING("BELL","\x03","\xb3","\xd4","\x2b"),
	HX_HCSTRING("CSI","\x99","\x1f","\x33","\x00"),
	HX_HCSTRING("attr","\x31","\x1d","\x76","\x40"),
	HX_HCSTRING("values","\xe2","\x03","\xb7","\x4f"),
	HX_HCSTRING("set","\xa2","\x9b","\x57","\x00"),
	HX_HCSTRING("available","\xc9","\x59","\x83","\x77"),
	HX_HCSTRING("strip","\xd8","\x52","\x18","\x84"),
	HX_HCSTRING("stripIfUnavailable","\x7b","\xb5","\x60","\x8b"),
	HX_HCSTRING("aset","\xe1","\x4d","\x75","\x40"),
	HX_HCSTRING("detectSupport","\xec","\xaf","\x8c","\xfa"),
	HX_HCSTRING("title","\x98","\x15","\x3b","\x10"),
	HX_HCSTRING("sequences","\x12","\x5b","\x8d","\xe6"),
	HX_HCSTRING("deleteLines","\xd4","\x11","\xf7","\x04"),
	HX_HCSTRING("reset","\xcf","\x49","\xc8","\xe6"),
	HX_HCSTRING("setX","\x76","\x92","\x50","\x4c"),
	HX_HCSTRING("moveDownReset","\xbc","\xb0","\x8d","\x17"),
	HX_HCSTRING("deleteLine","\xbf","\xf5","\xff","\x9a"),
	HX_HCSTRING("deleteChars","\xb2","\xd0","\xa8","\xd5"),
	HX_HCSTRING("moveUp","\xcc","\xd3","\xac","\xcc"),
	HX_HCSTRING("showCursor","\xb3","\x33","\x5d","\xa8"),
	HX_HCSTRING("insertChar","\xaf","\x5e","\xaa","\x27"),
	HX_HCSTRING("moveLeft","\xb8","\x73","\x67","\xea"),
	HX_HCSTRING("setY","\x77","\x92","\x50","\x4c"),
	HX_HCSTRING("eraseLine","\xfa","\x97","\x66","\xc8"),
	HX_HCSTRING("moveRight","\x0b","\xdb","\x2a","\xa7"),
	HX_HCSTRING("moveUpReset","\x63","\xa2","\xb9","\x1b"),
	HX_HCSTRING("saveCursor","\xf3","\x19","\xa2","\x87"),
	HX_HCSTRING("eraseChars","\x17","\x22","\x10","\x62"),
	HX_HCSTRING("hideCursor","\x38","\x35","\x6e","\xd6"),
	HX_HCSTRING("setXY","\x23","\x95","\x2f","\x7a"),
	HX_HCSTRING("moveDown","\x13","\x64","\x25","\xe5"),
	HX_HCSTRING("eraseDisplay","\xfc","\xf1","\xbd","\x0b"),
	HX_HCSTRING("insertLines","\x06","\xbc","\xb6","\xbc"),
	HX_HCSTRING("eraseDisplayToEnd","\x84","\x81","\x43","\xb2"),
	HX_HCSTRING("eraseLineToEnd","\xc6","\x62","\xca","\x85"),
	HX_HCSTRING("eraseLineToCursor","\xcb","\x14","\xef","\x42"),
	HX_HCSTRING("insertLine","\xcd","\x17","\x9e","\x2d"),
	HX_HCSTRING("insertChars","\xe4","\x7a","\x68","\x8d"),
	HX_HCSTRING("eraseChar","\xdc","\xde","\x72","\xc2"),
	HX_HCSTRING("deleteChar","\xa1","\x3c","\x0c","\x95"),
	HX_HCSTRING("loadCursor","\x9c","\xbd","\x13","\xf4"),
	HX_HCSTRING("eraseDisplayToCursor","\xcd","\x40","\x13","\xba"),
	HX_HCSTRING("resetY","\xaa","\x4b","\x78","\x08"),
	::String(null())
};

void ANSI_obj::__register()
{
	hx::Object *dummy = new ANSI_obj;
	ANSI_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("ANSI","\xc3","\x56","\x32","\x2b");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &ANSI_obj::__GetStatic;
	__mClass->mSetStaticField = &ANSI_obj::__SetStatic;
	__mClass->mMarkFunc = ANSI_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(ANSI_obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = hx::TCanCast< ANSI_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = ANSI_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = ANSI_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = ANSI_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

void ANSI_obj::__boot()
{
{
            	HX_STACKFRAME(&_hx_pos_51b16ca4e81f7d00_60_boot)
HXDLIN(  60)		ESCAPE = HX_("\x1b""",1b,00,00,00);
            	}
{
            	HX_STACKFRAME(&_hx_pos_51b16ca4e81f7d00_61_boot)
HXDLIN(  61)		BELL = HX_("\x07""",07,00,00,00);
            	}
{
            	HX_STACKFRAME(&_hx_pos_51b16ca4e81f7d00_63_boot)
HXDLIN(  63)		CSI = (HX_("\x1b""",1b,00,00,00) + HX_("[",5b,00,00,00));
            	}
{
            	HX_STACKFRAME(&_hx_pos_51b16ca4e81f7d00_65_boot)
HXDLIN(  65)		attr = hx::ClassOf< ::Attribute >();
            	}
{
            		HX_BEGIN_LOCAL_FUNC_S0(hx::LocalFunc,_hx_Closure_0) HXARGC(0)
            		 ::Dynamic _hx_run(){
            			HX_GC_STACKFRAME(&_hx_pos_51b16ca4e81f7d00_67_boot)
HXDLIN(  67)			 ::haxe::ds::EnumValueMap _g =  ::haxe::ds::EnumValueMap_obj::__alloc( HX_CTX );
HXDLIN(  67)			_g->set(::Attribute_obj::Off_dyn(),(int)0);
HXDLIN(  67)			_g->set(::Attribute_obj::Bold_dyn(),(int)1);
HXDLIN(  67)			_g->set(::Attribute_obj::Underline_dyn(),(int)4);
HXDLIN(  67)			_g->set(::Attribute_obj::Blink_dyn(),(int)5);
HXDLIN(  67)			_g->set(::Attribute_obj::ReverseVideo_dyn(),(int)7);
HXDLIN(  67)			_g->set(::Attribute_obj::Concealed_dyn(),(int)8);
HXDLIN(  67)			_g->set(::Attribute_obj::BoldOff_dyn(),(int)22);
HXDLIN(  67)			_g->set(::Attribute_obj::UnderlineOff_dyn(),(int)24);
HXDLIN(  67)			_g->set(::Attribute_obj::BlinkOff_dyn(),(int)25);
HXDLIN(  67)			_g->set(::Attribute_obj::NormalVideo_dyn(),(int)27);
HXDLIN(  67)			_g->set(::Attribute_obj::ConcealedOff_dyn(),(int)28);
HXDLIN(  67)			_g->set(::Attribute_obj::Black_dyn(),(int)30);
HXDLIN(  67)			_g->set(::Attribute_obj::Red_dyn(),(int)31);
HXDLIN(  67)			_g->set(::Attribute_obj::Green_dyn(),(int)32);
HXDLIN(  67)			_g->set(::Attribute_obj::Yellow_dyn(),(int)33);
HXDLIN(  67)			_g->set(::Attribute_obj::Blue_dyn(),(int)34);
HXDLIN(  67)			_g->set(::Attribute_obj::Magenta_dyn(),(int)35);
HXDLIN(  67)			_g->set(::Attribute_obj::Cyan_dyn(),(int)36);
HXDLIN(  67)			_g->set(::Attribute_obj::White_dyn(),(int)37);
HXDLIN(  67)			_g->set(::Attribute_obj::DefaultForeground_dyn(),(int)39);
HXDLIN(  67)			_g->set(::Attribute_obj::BlackBack_dyn(),(int)40);
HXDLIN(  67)			_g->set(::Attribute_obj::RedBack_dyn(),(int)41);
HXDLIN(  67)			_g->set(::Attribute_obj::GreenBack_dyn(),(int)42);
HXDLIN(  67)			_g->set(::Attribute_obj::YellowBack_dyn(),(int)43);
HXDLIN(  67)			_g->set(::Attribute_obj::BlueBack_dyn(),(int)44);
HXDLIN(  67)			_g->set(::Attribute_obj::MagentaBack_dyn(),(int)45);
HXDLIN(  67)			_g->set(::Attribute_obj::CyanBack_dyn(),(int)46);
HXDLIN(  67)			_g->set(::Attribute_obj::WhiteBack_dyn(),(int)47);
HXDLIN(  67)			_g->set(::Attribute_obj::DefaultBackground_dyn(),(int)49);
HXDLIN(  67)			return _g;
            		}
            		HX_END_LOCAL_FUNC0(return)

            	HX_STACKFRAME(&_hx_pos_51b16ca4e81f7d00_67_boot)
HXDLIN(  67)		values =  ::Dynamic(new _hx_Closure_0())();
            	}
{
            	HX_STACKFRAME(&_hx_pos_51b16ca4e81f7d00_104_boot)
HXDLIN( 104)		set = ::Reflect_obj::makeVarArgs(::ANSI_obj::aset_dyn());
            	}
{
            	HX_STACKFRAME(&_hx_pos_51b16ca4e81f7d00_105_boot)
HXDLIN( 105)		available = ::ANSI_obj::detectSupport();
            	}
{
            	HX_STACKFRAME(&_hx_pos_51b16ca4e81f7d00_106_boot)
HXDLIN( 106)		strip = false;
            	}
{
            	HX_STACKFRAME(&_hx_pos_51b16ca4e81f7d00_107_boot)
HXDLIN( 107)		stripIfUnavailable = true;
            	}
{
            		HX_BEGIN_LOCAL_FUNC_S0(hx::LocalFunc,_hx_Closure_0) HXARGC(0)
            		 ::Dynamic _hx_run(){
            			HX_GC_STACKFRAME(&_hx_pos_51b16ca4e81f7d00_154_boot)
HXDLIN( 154)			 ::haxe::ds::StringMap _g =  ::haxe::ds::StringMap_obj::__alloc( HX_CTX );
HXDLIN( 154)			_g->set(HX_("eraseDisplayToEnd",84,81,43,b2), ::Dynamic(hx::Anon_obj::Create(2)
            				->setFixed(0,HX_("doc",78,42,4c,00),HX_("Erase from cursor to the end of display.",2a,dd,08,9d))
            				->setFixed(1,HX_("val",e1,de,59,00),((HX_("\x1b""",1b,00,00,00) + HX_("[",5b,00,00,00)) + HX_("J",4a,00,00,00)))));
HXDLIN( 154)			_g->set(HX_("eraseDisplayToCursor",cd,40,13,ba), ::Dynamic(hx::Anon_obj::Create(2)
            				->setFixed(0,HX_("doc",78,42,4c,00),HX_("Erase from the start of diplay to cursor (inclusive).",35,cd,91,8f))
            				->setFixed(1,HX_("val",e1,de,59,00),((HX_("\x1b""",1b,00,00,00) + HX_("[",5b,00,00,00)) + HX_("1J",f9,2a,00,00)))));
HXDLIN( 154)			_g->set(HX_("eraseDisplay",fc,f1,bd,0b), ::Dynamic(hx::Anon_obj::Create(2)
            				->setFixed(0,HX_("doc",78,42,4c,00),HX_("Erase display and move cursor to the top-left.",17,83,c5,31))
            				->setFixed(1,HX_("val",e1,de,59,00),((HX_("\x1b""",1b,00,00,00) + HX_("[",5b,00,00,00)) + HX_("2J",d8,2b,00,00)))));
HXDLIN( 154)			_g->set(HX_("eraseLineToEnd",c6,62,ca,85), ::Dynamic(hx::Anon_obj::Create(2)
            				->setFixed(0,HX_("doc",78,42,4c,00),HX_("Erase from cursor to the end of line.",7c,95,7b,45))
            				->setFixed(1,HX_("val",e1,de,59,00),((HX_("\x1b""",1b,00,00,00) + HX_("[",5b,00,00,00)) + HX_("K",4b,00,00,00)))));
HXDLIN( 154)			_g->set(HX_("eraseLineToCursor",cb,14,ef,42), ::Dynamic(hx::Anon_obj::Create(2)
            				->setFixed(0,HX_("doc",78,42,4c,00),HX_("Erase from the start of line to cursor (inclusive).",9a,38,e2,8e))
            				->setFixed(1,HX_("val",e1,de,59,00),((HX_("\x1b""",1b,00,00,00) + HX_("[",5b,00,00,00)) + HX_("1K",fa,2a,00,00)))));
HXDLIN( 154)			_g->set(HX_("eraseLine",fa,97,66,c8), ::Dynamic(hx::Anon_obj::Create(2)
            				->setFixed(0,HX_("doc",78,42,4c,00),HX_("Erase line.",e0,9a,a3,a4))
            				->setFixed(1,HX_("val",e1,de,59,00),((HX_("\x1b""",1b,00,00,00) + HX_("[",5b,00,00,00)) + HX_("2K",d9,2b,00,00)))));
HXDLIN( 154)			_g->set(HX_("eraseChar",dc,de,72,c2), ::Dynamic(hx::Anon_obj::Create(2)
            				->setFixed(0,HX_("doc",78,42,4c,00),HX_("Erase one character.",f9,81,cb,9d))
            				->setFixed(1,HX_("val",e1,de,59,00),((HX_("\x1b""",1b,00,00,00) + HX_("[",5b,00,00,00)) + HX_("X",58,00,00,00)))));
HXDLIN( 154)			_g->set(HX_("eraseChars",17,22,10,62), ::Dynamic(hx::Anon_obj::Create(2)
            				->setFixed(0,HX_("doc",78,42,4c,00),HX_("Erase # characters.",ed,6b,fa,42))
            				->setFixed(1,HX_("val",e1,de,59,00),((HX_("\x1b""",1b,00,00,00) + HX_("[",5b,00,00,00)) + HX_("#X",d5,1e,00,00)))));
HXDLIN( 154)			_g->set(HX_("insertLine",cd,17,9e,2d), ::Dynamic(hx::Anon_obj::Create(2)
            				->setFixed(0,HX_("doc",78,42,4c,00),HX_("Insert one blank line.",6d,ac,67,d0))
            				->setFixed(1,HX_("val",e1,de,59,00),((HX_("\x1b""",1b,00,00,00) + HX_("[",5b,00,00,00)) + HX_("L",4c,00,00,00)))));
HXDLIN( 154)			_g->set(HX_("insertLines",06,bc,b6,bc), ::Dynamic(hx::Anon_obj::Create(2)
            				->setFixed(0,HX_("doc",78,42,4c,00),HX_("Insert # blank lines.",9f,2f,7d,47))
            				->setFixed(1,HX_("val",e1,de,59,00),((HX_("\x1b""",1b,00,00,00) + HX_("[",5b,00,00,00)) + HX_("#L",c9,1e,00,00)))));
HXDLIN( 154)			_g->set(HX_("deleteLine",bf,f5,ff,9a), ::Dynamic(hx::Anon_obj::Create(2)
            				->setFixed(0,HX_("doc",78,42,4c,00),HX_("Delete one line.",6b,70,ad,b4))
            				->setFixed(1,HX_("val",e1,de,59,00),((HX_("\x1b""",1b,00,00,00) + HX_("[",5b,00,00,00)) + HX_("M",4d,00,00,00)))));
HXDLIN( 154)			_g->set(HX_("deleteLines",d4,11,f7,04), ::Dynamic(hx::Anon_obj::Create(2)
            				->setFixed(0,HX_("doc",78,42,4c,00),HX_("Delete # lines.",21,5e,7f,50))
            				->setFixed(1,HX_("val",e1,de,59,00),((HX_("\x1b""",1b,00,00,00) + HX_("[",5b,00,00,00)) + HX_("#M",ca,1e,00,00)))));
HXDLIN( 154)			_g->set(HX_("deleteChar",a1,3c,0c,95), ::Dynamic(hx::Anon_obj::Create(2)
            				->setFixed(0,HX_("doc",78,42,4c,00),HX_("Delete one character.",14,64,1c,4a))
            				->setFixed(1,HX_("val",e1,de,59,00),((HX_("\x1b""",1b,00,00,00) + HX_("[",5b,00,00,00)) + HX_("P",50,00,00,00)))));
HXDLIN( 154)			_g->set(HX_("deleteChars",b2,d0,a8,d5), ::Dynamic(hx::Anon_obj::Create(2)
            				->setFixed(0,HX_("doc",78,42,4c,00),HX_("Delete # characters.",32,86,00,7c))
            				->setFixed(1,HX_("val",e1,de,59,00),((HX_("\x1b""",1b,00,00,00) + HX_("[",5b,00,00,00)) + HX_("#P",cd,1e,00,00)))));
HXDLIN( 154)			_g->set(HX_("insertChar",af,5e,aa,27), ::Dynamic(hx::Anon_obj::Create(2)
            				->setFixed(0,HX_("doc",78,42,4c,00),HX_("Insert one blank character.",d2,60,7f,a2))
            				->setFixed(1,HX_("val",e1,de,59,00),((HX_("\x1b""",1b,00,00,00) + HX_("[",5b,00,00,00)) + HX_("@",40,00,00,00)))));
HXDLIN( 154)			_g->set(HX_("insertChars",e4,7a,68,8d), ::Dynamic(hx::Anon_obj::Create(2)
            				->setFixed(0,HX_("doc",78,42,4c,00),HX_("Insert # blank characters.",f4,8b,44,07))
            				->setFixed(1,HX_("val",e1,de,59,00),((HX_("\x1b""",1b,00,00,00) + HX_("[",5b,00,00,00)) + HX_("#@",bd,1e,00,00)))));
HXDLIN( 154)			_g->set(HX_("moveUp",cc,d3,ac,cc), ::Dynamic(hx::Anon_obj::Create(2)
            				->setFixed(0,HX_("doc",78,42,4c,00),HX_("Move cursor up # lines.",56,f1,8a,b6))
            				->setFixed(1,HX_("val",e1,de,59,00),((HX_("\x1b""",1b,00,00,00) + HX_("[",5b,00,00,00)) + HX_("#A",be,1e,00,00)))));
HXDLIN( 154)			_g->set(HX_("moveDown",13,64,25,e5), ::Dynamic(hx::Anon_obj::Create(2)
            				->setFixed(0,HX_("doc",78,42,4c,00),HX_("Move cursor down # lines.",af,81,c8,34))
            				->setFixed(1,HX_("val",e1,de,59,00),((HX_("\x1b""",1b,00,00,00) + HX_("[",5b,00,00,00)) + HX_("#B",bf,1e,00,00)))));
HXDLIN( 154)			_g->set(HX_("moveRight",0b,db,2a,a7), ::Dynamic(hx::Anon_obj::Create(2)
            				->setFixed(0,HX_("doc",78,42,4c,00),HX_("Move cursor right # characters.",c8,ed,84,7d))
            				->setFixed(1,HX_("val",e1,de,59,00),((HX_("\x1b""",1b,00,00,00) + HX_("[",5b,00,00,00)) + HX_("#C",c0,1e,00,00)))));
HXDLIN( 154)			_g->set(HX_("moveLeft",b8,73,67,ea), ::Dynamic(hx::Anon_obj::Create(2)
            				->setFixed(0,HX_("doc",78,42,4c,00),HX_("Move cursor left # characters.",49,06,b2,6c))
            				->setFixed(1,HX_("val",e1,de,59,00),((HX_("\x1b""",1b,00,00,00) + HX_("[",5b,00,00,00)) + HX_("#D",c1,1e,00,00)))));
HXDLIN( 154)			_g->set(HX_("moveDownReset",bc,b0,8d,17), ::Dynamic(hx::Anon_obj::Create(2)
            				->setFixed(0,HX_("doc",78,42,4c,00),HX_("Move cursor down # lines and to first column.",cd,86,d7,cf))
            				->setFixed(1,HX_("val",e1,de,59,00),((HX_("\x1b""",1b,00,00,00) + HX_("[",5b,00,00,00)) + HX_("#E",c2,1e,00,00)))));
HXDLIN( 154)			_g->set(HX_("moveUpReset",63,a2,b9,1b), ::Dynamic(hx::Anon_obj::Create(2)
            				->setFixed(0,HX_("doc",78,42,4c,00),HX_("Move cursor up # lines and to first column.",f4,53,db,36))
            				->setFixed(1,HX_("val",e1,de,59,00),((HX_("\x1b""",1b,00,00,00) + HX_("[",5b,00,00,00)) + HX_("#F",c3,1e,00,00)))));
HXDLIN( 154)			_g->set(HX_("setX",76,92,50,4c), ::Dynamic(hx::Anon_obj::Create(2)
            				->setFixed(0,HX_("doc",78,42,4c,00),HX_("Move cursor to column #.",eb,7f,eb,e1))
            				->setFixed(1,HX_("val",e1,de,59,00),((HX_("\x1b""",1b,00,00,00) + HX_("[",5b,00,00,00)) + HX_("#G",c4,1e,00,00)))));
HXDLIN( 154)			_g->set(HX_("setY",77,92,50,4c), ::Dynamic(hx::Anon_obj::Create(2)
            				->setFixed(0,HX_("doc",78,42,4c,00),HX_("Move cursor to line #.",0d,a4,d0,8a))
            				->setFixed(1,HX_("val",e1,de,59,00),((HX_("\x1b""",1b,00,00,00) + HX_("[",5b,00,00,00)) + HX_("#d",e1,1e,00,00)))));
HXDLIN( 154)			_g->set(HX_("reset",cf,49,c8,e6), ::Dynamic(hx::Anon_obj::Create(2)
            				->setFixed(0,HX_("doc",78,42,4c,00),HX_("Move cursor to top-left.",85,3d,73,27))
            				->setFixed(1,HX_("val",e1,de,59,00),((HX_("\x1b""",1b,00,00,00) + HX_("[",5b,00,00,00)) + HX_("H",48,00,00,00)))));
HXDLIN( 154)			_g->set(HX_("resetY",aa,4b,78,08), ::Dynamic(hx::Anon_obj::Create(2)
            				->setFixed(0,HX_("doc",78,42,4c,00),HX_("Move cursor to line # and first column.",c0,16,9d,30))
            				->setFixed(1,HX_("val",e1,de,59,00),((HX_("\x1b""",1b,00,00,00) + HX_("[",5b,00,00,00)) + HX_("#H",c5,1e,00,00)))));
HXDLIN( 154)			_g->set(HX_("setXY",23,95,2f,7a), ::Dynamic(hx::Anon_obj::Create(3)
            				->setFixed(0,HX_("params",46,fb,7a,ed),::Array_obj< ::Dynamic>::__new(2)->init(0, ::Dynamic(hx::Anon_obj::Create(2)
            					->setFixed(0,HX_("index",12,9b,14,be),(int)1)
            					->setFixed(1,HX_("name",4b,72,ff,48),HX_("column",d6,4e,8b,c6))))->init(1, ::Dynamic(hx::Anon_obj::Create(2)
            					->setFixed(0,HX_("index",12,9b,14,be),(int)0)
            					->setFixed(1,HX_("name",4b,72,ff,48),HX_("line",f4,17,b3,47)))))
            				->setFixed(1,HX_("doc",78,42,4c,00),HX_("Move cursor to line #, column #.",60,bd,e8,fc))
            				->setFixed(2,HX_("val",e1,de,59,00),((HX_("\x1b""",1b,00,00,00) + HX_("[",5b,00,00,00)) + HX_("#;#H",7d,5b,4f,17)))));
HXDLIN( 154)			_g->set(HX_("saveCursor",f3,19,a2,87), ::Dynamic(hx::Anon_obj::Create(2)
            				->setFixed(0,HX_("doc",78,42,4c,00),HX_("Save cursor position.",be,15,98,be))
            				->setFixed(1,HX_("val",e1,de,59,00),((HX_("\x1b""",1b,00,00,00) + HX_("[",5b,00,00,00)) + HX_("s",73,00,00,00)))));
HXDLIN( 154)			_g->set(HX_("loadCursor",9c,bd,13,f4), ::Dynamic(hx::Anon_obj::Create(2)
            				->setFixed(0,HX_("doc",78,42,4c,00),HX_("Move cursor to saved position.",42,d3,f7,46))
            				->setFixed(1,HX_("val",e1,de,59,00),((HX_("\x1b""",1b,00,00,00) + HX_("[",5b,00,00,00)) + HX_("u",75,00,00,00)))));
HXDLIN( 154)			_g->set(HX_("showCursor",b3,33,5d,a8), ::Dynamic(hx::Anon_obj::Create(2)
            				->setFixed(0,HX_("doc",78,42,4c,00),HX_("Show cursor.",95,96,d0,0c))
            				->setFixed(1,HX_("val",e1,de,59,00),((HX_("\x1b""",1b,00,00,00) + HX_("[",5b,00,00,00)) + HX_("?25h",66,90,ca,29)))));
HXDLIN( 154)			_g->set(HX_("hideCursor",38,35,6e,d6), ::Dynamic(hx::Anon_obj::Create(2)
            				->setFixed(0,HX_("doc",78,42,4c,00),HX_("Hide cursor.",5a,c3,48,a2))
            				->setFixed(1,HX_("val",e1,de,59,00),((HX_("\x1b""",1b,00,00,00) + HX_("[",5b,00,00,00)) + HX_("?25l",6a,90,ca,29)))));
HXDLIN( 154)			return _g;
            		}
            		HX_END_LOCAL_FUNC0(return)

            	HX_STACKFRAME(&_hx_pos_51b16ca4e81f7d00_154_boot)
HXDLIN( 154)		sequences =  ::Dynamic(new _hx_Closure_0())();
            	}
}

