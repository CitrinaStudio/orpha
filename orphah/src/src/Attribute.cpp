// Generated by Haxe 3.4.3
#include <hxcpp.h>

#ifndef INCLUDED_Attribute
#include <Attribute.h>
#endif

::Attribute Attribute_obj::Black;

::Attribute Attribute_obj::BlackBack;

::Attribute Attribute_obj::Blink;

::Attribute Attribute_obj::BlinkOff;

::Attribute Attribute_obj::Blue;

::Attribute Attribute_obj::BlueBack;

::Attribute Attribute_obj::Bold;

::Attribute Attribute_obj::BoldOff;

::Attribute Attribute_obj::Concealed;

::Attribute Attribute_obj::ConcealedOff;

::Attribute Attribute_obj::Cyan;

::Attribute Attribute_obj::CyanBack;

::Attribute Attribute_obj::DefaultBackground;

::Attribute Attribute_obj::DefaultForeground;

::Attribute Attribute_obj::Green;

::Attribute Attribute_obj::GreenBack;

::Attribute Attribute_obj::Magenta;

::Attribute Attribute_obj::MagentaBack;

::Attribute Attribute_obj::NormalVideo;

::Attribute Attribute_obj::Off;

::Attribute Attribute_obj::Red;

::Attribute Attribute_obj::RedBack;

::Attribute Attribute_obj::ReverseVideo;

::Attribute Attribute_obj::Underline;

::Attribute Attribute_obj::UnderlineOff;

::Attribute Attribute_obj::White;

::Attribute Attribute_obj::WhiteBack;

::Attribute Attribute_obj::Yellow;

::Attribute Attribute_obj::YellowBack;

bool Attribute_obj::__GetStatic(const ::String &inName, ::Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	if (inName==HX_("Black",9f,45,1f,48)) { outValue = Attribute_obj::Black; return true; }
	if (inName==HX_("BlackBack",66,07,46,a2)) { outValue = Attribute_obj::BlackBack; return true; }
	if (inName==HX_("Blink",3c,61,25,48)) { outValue = Attribute_obj::Blink; return true; }
	if (inName==HX_("BlinkOff",93,57,92,e2)) { outValue = Attribute_obj::BlinkOff; return true; }
	if (inName==HX_("Blue",ba,6e,f2,2b)) { outValue = Attribute_obj::Blue; return true; }
	if (inName==HX_("BlueBack",01,5a,33,65)) { outValue = Attribute_obj::BlueBack; return true; }
	if (inName==HX_("Bold",a5,ad,f4,2b)) { outValue = Attribute_obj::Bold; return true; }
	if (inName==HX_("BoldOff",ca,f2,c1,8b)) { outValue = Attribute_obj::BoldOff; return true; }
	if (inName==HX_("Concealed",4e,4b,84,dd)) { outValue = Attribute_obj::Concealed; return true; }
	if (inName==HX_("ConcealedOff",c1,84,c7,33)) { outValue = Attribute_obj::ConcealedOff; return true; }
	if (inName==HX_("Cyan",43,71,a5,2c)) { outValue = Attribute_obj::Cyan; return true; }
	if (inName==HX_("CyanBack",0a,d5,74,ea)) { outValue = Attribute_obj::CyanBack; return true; }
	if (inName==HX_("DefaultBackground",ef,0b,05,9e)) { outValue = Attribute_obj::DefaultBackground; return true; }
	if (inName==HX_("DefaultForeground",c4,90,d6,88)) { outValue = Attribute_obj::DefaultForeground; return true; }
	if (inName==HX_("Green",a3,7e,1a,2d)) { outValue = Attribute_obj::Green; return true; }
	if (inName==HX_("GreenBack",6a,12,6c,45)) { outValue = Attribute_obj::GreenBack; return true; }
	if (inName==HX_("Magenta",09,e2,ee,db)) { outValue = Attribute_obj::Magenta; return true; }
	if (inName==HX_("MagentaBack",d0,20,8d,54)) { outValue = Attribute_obj::MagentaBack; return true; }
	if (inName==HX_("NormalVideo",b4,7c,60,a8)) { outValue = Attribute_obj::NormalVideo; return true; }
	if (inName==HX_("Off",4f,4b,3c,00)) { outValue = Attribute_obj::Off; return true; }
	if (inName==HX_("Red",31,91,3e,00)) { outValue = Attribute_obj::Red; return true; }
	if (inName==HX_("RedBack",f8,83,e7,73)) { outValue = Attribute_obj::RedBack; return true; }
	if (inName==HX_("ReverseVideo",19,3c,73,15)) { outValue = Attribute_obj::ReverseVideo; return true; }
	if (inName==HX_("Underline",ec,f4,a3,29)) { outValue = Attribute_obj::Underline; return true; }
	if (inName==HX_("UnderlineOff",e3,31,87,22)) { outValue = Attribute_obj::UnderlineOff; return true; }
	if (inName==HX_("White",89,ba,ea,5c)) { outValue = Attribute_obj::White; return true; }
	if (inName==HX_("WhiteBack",50,39,9f,af)) { outValue = Attribute_obj::WhiteBack; return true; }
	if (inName==HX_("Yellow",94,13,f1,04)) { outValue = Attribute_obj::Yellow; return true; }
	if (inName==HX_("YellowBack",db,73,ae,d1)) { outValue = Attribute_obj::YellowBack; return true; }
	return super::__GetStatic(inName, outValue, inCallProp);
}

HX_DEFINE_CREATE_ENUM(Attribute_obj)

int Attribute_obj::__FindIndex(::String inName)
{
	if (inName==HX_("Black",9f,45,1f,48)) return 11;
	if (inName==HX_("BlackBack",66,07,46,a2)) return 20;
	if (inName==HX_("Blink",3c,61,25,48)) return 3;
	if (inName==HX_("BlinkOff",93,57,92,e2)) return 8;
	if (inName==HX_("Blue",ba,6e,f2,2b)) return 15;
	if (inName==HX_("BlueBack",01,5a,33,65)) return 24;
	if (inName==HX_("Bold",a5,ad,f4,2b)) return 1;
	if (inName==HX_("BoldOff",ca,f2,c1,8b)) return 6;
	if (inName==HX_("Concealed",4e,4b,84,dd)) return 5;
	if (inName==HX_("ConcealedOff",c1,84,c7,33)) return 10;
	if (inName==HX_("Cyan",43,71,a5,2c)) return 17;
	if (inName==HX_("CyanBack",0a,d5,74,ea)) return 26;
	if (inName==HX_("DefaultBackground",ef,0b,05,9e)) return 28;
	if (inName==HX_("DefaultForeground",c4,90,d6,88)) return 19;
	if (inName==HX_("Green",a3,7e,1a,2d)) return 13;
	if (inName==HX_("GreenBack",6a,12,6c,45)) return 22;
	if (inName==HX_("Magenta",09,e2,ee,db)) return 16;
	if (inName==HX_("MagentaBack",d0,20,8d,54)) return 25;
	if (inName==HX_("NormalVideo",b4,7c,60,a8)) return 9;
	if (inName==HX_("Off",4f,4b,3c,00)) return 0;
	if (inName==HX_("Red",31,91,3e,00)) return 12;
	if (inName==HX_("RedBack",f8,83,e7,73)) return 21;
	if (inName==HX_("ReverseVideo",19,3c,73,15)) return 4;
	if (inName==HX_("Underline",ec,f4,a3,29)) return 2;
	if (inName==HX_("UnderlineOff",e3,31,87,22)) return 7;
	if (inName==HX_("White",89,ba,ea,5c)) return 18;
	if (inName==HX_("WhiteBack",50,39,9f,af)) return 27;
	if (inName==HX_("Yellow",94,13,f1,04)) return 14;
	if (inName==HX_("YellowBack",db,73,ae,d1)) return 23;
	return super::__FindIndex(inName);
}

int Attribute_obj::__FindArgCount(::String inName)
{
	if (inName==HX_("Black",9f,45,1f,48)) return 0;
	if (inName==HX_("BlackBack",66,07,46,a2)) return 0;
	if (inName==HX_("Blink",3c,61,25,48)) return 0;
	if (inName==HX_("BlinkOff",93,57,92,e2)) return 0;
	if (inName==HX_("Blue",ba,6e,f2,2b)) return 0;
	if (inName==HX_("BlueBack",01,5a,33,65)) return 0;
	if (inName==HX_("Bold",a5,ad,f4,2b)) return 0;
	if (inName==HX_("BoldOff",ca,f2,c1,8b)) return 0;
	if (inName==HX_("Concealed",4e,4b,84,dd)) return 0;
	if (inName==HX_("ConcealedOff",c1,84,c7,33)) return 0;
	if (inName==HX_("Cyan",43,71,a5,2c)) return 0;
	if (inName==HX_("CyanBack",0a,d5,74,ea)) return 0;
	if (inName==HX_("DefaultBackground",ef,0b,05,9e)) return 0;
	if (inName==HX_("DefaultForeground",c4,90,d6,88)) return 0;
	if (inName==HX_("Green",a3,7e,1a,2d)) return 0;
	if (inName==HX_("GreenBack",6a,12,6c,45)) return 0;
	if (inName==HX_("Magenta",09,e2,ee,db)) return 0;
	if (inName==HX_("MagentaBack",d0,20,8d,54)) return 0;
	if (inName==HX_("NormalVideo",b4,7c,60,a8)) return 0;
	if (inName==HX_("Off",4f,4b,3c,00)) return 0;
	if (inName==HX_("Red",31,91,3e,00)) return 0;
	if (inName==HX_("RedBack",f8,83,e7,73)) return 0;
	if (inName==HX_("ReverseVideo",19,3c,73,15)) return 0;
	if (inName==HX_("Underline",ec,f4,a3,29)) return 0;
	if (inName==HX_("UnderlineOff",e3,31,87,22)) return 0;
	if (inName==HX_("White",89,ba,ea,5c)) return 0;
	if (inName==HX_("WhiteBack",50,39,9f,af)) return 0;
	if (inName==HX_("Yellow",94,13,f1,04)) return 0;
	if (inName==HX_("YellowBack",db,73,ae,d1)) return 0;
	return super::__FindArgCount(inName);
}

hx::Val Attribute_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	if (inName==HX_("Black",9f,45,1f,48)) return Black;
	if (inName==HX_("BlackBack",66,07,46,a2)) return BlackBack;
	if (inName==HX_("Blink",3c,61,25,48)) return Blink;
	if (inName==HX_("BlinkOff",93,57,92,e2)) return BlinkOff;
	if (inName==HX_("Blue",ba,6e,f2,2b)) return Blue;
	if (inName==HX_("BlueBack",01,5a,33,65)) return BlueBack;
	if (inName==HX_("Bold",a5,ad,f4,2b)) return Bold;
	if (inName==HX_("BoldOff",ca,f2,c1,8b)) return BoldOff;
	if (inName==HX_("Concealed",4e,4b,84,dd)) return Concealed;
	if (inName==HX_("ConcealedOff",c1,84,c7,33)) return ConcealedOff;
	if (inName==HX_("Cyan",43,71,a5,2c)) return Cyan;
	if (inName==HX_("CyanBack",0a,d5,74,ea)) return CyanBack;
	if (inName==HX_("DefaultBackground",ef,0b,05,9e)) return DefaultBackground;
	if (inName==HX_("DefaultForeground",c4,90,d6,88)) return DefaultForeground;
	if (inName==HX_("Green",a3,7e,1a,2d)) return Green;
	if (inName==HX_("GreenBack",6a,12,6c,45)) return GreenBack;
	if (inName==HX_("Magenta",09,e2,ee,db)) return Magenta;
	if (inName==HX_("MagentaBack",d0,20,8d,54)) return MagentaBack;
	if (inName==HX_("NormalVideo",b4,7c,60,a8)) return NormalVideo;
	if (inName==HX_("Off",4f,4b,3c,00)) return Off;
	if (inName==HX_("Red",31,91,3e,00)) return Red;
	if (inName==HX_("RedBack",f8,83,e7,73)) return RedBack;
	if (inName==HX_("ReverseVideo",19,3c,73,15)) return ReverseVideo;
	if (inName==HX_("Underline",ec,f4,a3,29)) return Underline;
	if (inName==HX_("UnderlineOff",e3,31,87,22)) return UnderlineOff;
	if (inName==HX_("White",89,ba,ea,5c)) return White;
	if (inName==HX_("WhiteBack",50,39,9f,af)) return WhiteBack;
	if (inName==HX_("Yellow",94,13,f1,04)) return Yellow;
	if (inName==HX_("YellowBack",db,73,ae,d1)) return YellowBack;
	return super::__Field(inName,inCallProp);
}

static ::String Attribute_obj_sStaticFields[] = {
	HX_("Off",4f,4b,3c,00),
	HX_("Bold",a5,ad,f4,2b),
	HX_("Underline",ec,f4,a3,29),
	HX_("Blink",3c,61,25,48),
	HX_("ReverseVideo",19,3c,73,15),
	HX_("Concealed",4e,4b,84,dd),
	HX_("BoldOff",ca,f2,c1,8b),
	HX_("UnderlineOff",e3,31,87,22),
	HX_("BlinkOff",93,57,92,e2),
	HX_("NormalVideo",b4,7c,60,a8),
	HX_("ConcealedOff",c1,84,c7,33),
	HX_("Black",9f,45,1f,48),
	HX_("Red",31,91,3e,00),
	HX_("Green",a3,7e,1a,2d),
	HX_("Yellow",94,13,f1,04),
	HX_("Blue",ba,6e,f2,2b),
	HX_("Magenta",09,e2,ee,db),
	HX_("Cyan",43,71,a5,2c),
	HX_("White",89,ba,ea,5c),
	HX_("DefaultForeground",c4,90,d6,88),
	HX_("BlackBack",66,07,46,a2),
	HX_("RedBack",f8,83,e7,73),
	HX_("GreenBack",6a,12,6c,45),
	HX_("YellowBack",db,73,ae,d1),
	HX_("BlueBack",01,5a,33,65),
	HX_("MagentaBack",d0,20,8d,54),
	HX_("CyanBack",0a,d5,74,ea),
	HX_("WhiteBack",50,39,9f,af),
	HX_("DefaultBackground",ef,0b,05,9e),
	::String(null())
};

static void Attribute_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(Attribute_obj::Black,"Black");
	HX_MARK_MEMBER_NAME(Attribute_obj::BlackBack,"BlackBack");
	HX_MARK_MEMBER_NAME(Attribute_obj::Blink,"Blink");
	HX_MARK_MEMBER_NAME(Attribute_obj::BlinkOff,"BlinkOff");
	HX_MARK_MEMBER_NAME(Attribute_obj::Blue,"Blue");
	HX_MARK_MEMBER_NAME(Attribute_obj::BlueBack,"BlueBack");
	HX_MARK_MEMBER_NAME(Attribute_obj::Bold,"Bold");
	HX_MARK_MEMBER_NAME(Attribute_obj::BoldOff,"BoldOff");
	HX_MARK_MEMBER_NAME(Attribute_obj::Concealed,"Concealed");
	HX_MARK_MEMBER_NAME(Attribute_obj::ConcealedOff,"ConcealedOff");
	HX_MARK_MEMBER_NAME(Attribute_obj::Cyan,"Cyan");
	HX_MARK_MEMBER_NAME(Attribute_obj::CyanBack,"CyanBack");
	HX_MARK_MEMBER_NAME(Attribute_obj::DefaultBackground,"DefaultBackground");
	HX_MARK_MEMBER_NAME(Attribute_obj::DefaultForeground,"DefaultForeground");
	HX_MARK_MEMBER_NAME(Attribute_obj::Green,"Green");
	HX_MARK_MEMBER_NAME(Attribute_obj::GreenBack,"GreenBack");
	HX_MARK_MEMBER_NAME(Attribute_obj::Magenta,"Magenta");
	HX_MARK_MEMBER_NAME(Attribute_obj::MagentaBack,"MagentaBack");
	HX_MARK_MEMBER_NAME(Attribute_obj::NormalVideo,"NormalVideo");
	HX_MARK_MEMBER_NAME(Attribute_obj::Off,"Off");
	HX_MARK_MEMBER_NAME(Attribute_obj::Red,"Red");
	HX_MARK_MEMBER_NAME(Attribute_obj::RedBack,"RedBack");
	HX_MARK_MEMBER_NAME(Attribute_obj::ReverseVideo,"ReverseVideo");
	HX_MARK_MEMBER_NAME(Attribute_obj::Underline,"Underline");
	HX_MARK_MEMBER_NAME(Attribute_obj::UnderlineOff,"UnderlineOff");
	HX_MARK_MEMBER_NAME(Attribute_obj::White,"White");
	HX_MARK_MEMBER_NAME(Attribute_obj::WhiteBack,"WhiteBack");
	HX_MARK_MEMBER_NAME(Attribute_obj::Yellow,"Yellow");
	HX_MARK_MEMBER_NAME(Attribute_obj::YellowBack,"YellowBack");
};

#ifdef HXCPP_VISIT_ALLOCS
static void Attribute_obj_sVisitStatic(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(Attribute_obj::__mClass,"__mClass");
	HX_VISIT_MEMBER_NAME(Attribute_obj::Black,"Black");
	HX_VISIT_MEMBER_NAME(Attribute_obj::BlackBack,"BlackBack");
	HX_VISIT_MEMBER_NAME(Attribute_obj::Blink,"Blink");
	HX_VISIT_MEMBER_NAME(Attribute_obj::BlinkOff,"BlinkOff");
	HX_VISIT_MEMBER_NAME(Attribute_obj::Blue,"Blue");
	HX_VISIT_MEMBER_NAME(Attribute_obj::BlueBack,"BlueBack");
	HX_VISIT_MEMBER_NAME(Attribute_obj::Bold,"Bold");
	HX_VISIT_MEMBER_NAME(Attribute_obj::BoldOff,"BoldOff");
	HX_VISIT_MEMBER_NAME(Attribute_obj::Concealed,"Concealed");
	HX_VISIT_MEMBER_NAME(Attribute_obj::ConcealedOff,"ConcealedOff");
	HX_VISIT_MEMBER_NAME(Attribute_obj::Cyan,"Cyan");
	HX_VISIT_MEMBER_NAME(Attribute_obj::CyanBack,"CyanBack");
	HX_VISIT_MEMBER_NAME(Attribute_obj::DefaultBackground,"DefaultBackground");
	HX_VISIT_MEMBER_NAME(Attribute_obj::DefaultForeground,"DefaultForeground");
	HX_VISIT_MEMBER_NAME(Attribute_obj::Green,"Green");
	HX_VISIT_MEMBER_NAME(Attribute_obj::GreenBack,"GreenBack");
	HX_VISIT_MEMBER_NAME(Attribute_obj::Magenta,"Magenta");
	HX_VISIT_MEMBER_NAME(Attribute_obj::MagentaBack,"MagentaBack");
	HX_VISIT_MEMBER_NAME(Attribute_obj::NormalVideo,"NormalVideo");
	HX_VISIT_MEMBER_NAME(Attribute_obj::Off,"Off");
	HX_VISIT_MEMBER_NAME(Attribute_obj::Red,"Red");
	HX_VISIT_MEMBER_NAME(Attribute_obj::RedBack,"RedBack");
	HX_VISIT_MEMBER_NAME(Attribute_obj::ReverseVideo,"ReverseVideo");
	HX_VISIT_MEMBER_NAME(Attribute_obj::Underline,"Underline");
	HX_VISIT_MEMBER_NAME(Attribute_obj::UnderlineOff,"UnderlineOff");
	HX_VISIT_MEMBER_NAME(Attribute_obj::White,"White");
	HX_VISIT_MEMBER_NAME(Attribute_obj::WhiteBack,"WhiteBack");
	HX_VISIT_MEMBER_NAME(Attribute_obj::Yellow,"Yellow");
	HX_VISIT_MEMBER_NAME(Attribute_obj::YellowBack,"YellowBack");
};
#endif

hx::Class Attribute_obj::__mClass;

Dynamic __Create_Attribute_obj() { return new Attribute_obj; }

void Attribute_obj::__register()
{

hx::Static(__mClass) = hx::_hx_RegisterClass(HX_HCSTRING("Attribute","\xfc","\x4f","\xc3","\x9c"), hx::TCanCast< Attribute_obj >,Attribute_obj_sStaticFields,0,
	&__Create_Attribute_obj, &__Create,
	&super::__SGetClass(), &CreateAttribute_obj, Attribute_obj_sMarkStatics
#ifdef HXCPP_VISIT_ALLOCS
    , Attribute_obj_sVisitStatic
#endif
#ifdef HXCPP_SCRIPTABLE
    , 0
#endif
);
	__mClass->mGetStaticField = &Attribute_obj::__GetStatic;
}

void Attribute_obj::__boot()
{
Black = hx::CreateEnum< Attribute_obj >(HX_HCSTRING("Black","\x9f","\x45","\x1f","\x48"),11,0);
BlackBack = hx::CreateEnum< Attribute_obj >(HX_HCSTRING("BlackBack","\x66","\x07","\x46","\xa2"),20,0);
Blink = hx::CreateEnum< Attribute_obj >(HX_HCSTRING("Blink","\x3c","\x61","\x25","\x48"),3,0);
BlinkOff = hx::CreateEnum< Attribute_obj >(HX_HCSTRING("BlinkOff","\x93","\x57","\x92","\xe2"),8,0);
Blue = hx::CreateEnum< Attribute_obj >(HX_HCSTRING("Blue","\xba","\x6e","\xf2","\x2b"),15,0);
BlueBack = hx::CreateEnum< Attribute_obj >(HX_HCSTRING("BlueBack","\x01","\x5a","\x33","\x65"),24,0);
Bold = hx::CreateEnum< Attribute_obj >(HX_HCSTRING("Bold","\xa5","\xad","\xf4","\x2b"),1,0);
BoldOff = hx::CreateEnum< Attribute_obj >(HX_HCSTRING("BoldOff","\xca","\xf2","\xc1","\x8b"),6,0);
Concealed = hx::CreateEnum< Attribute_obj >(HX_HCSTRING("Concealed","\x4e","\x4b","\x84","\xdd"),5,0);
ConcealedOff = hx::CreateEnum< Attribute_obj >(HX_HCSTRING("ConcealedOff","\xc1","\x84","\xc7","\x33"),10,0);
Cyan = hx::CreateEnum< Attribute_obj >(HX_HCSTRING("Cyan","\x43","\x71","\xa5","\x2c"),17,0);
CyanBack = hx::CreateEnum< Attribute_obj >(HX_HCSTRING("CyanBack","\x0a","\xd5","\x74","\xea"),26,0);
DefaultBackground = hx::CreateEnum< Attribute_obj >(HX_HCSTRING("DefaultBackground","\xef","\x0b","\x05","\x9e"),28,0);
DefaultForeground = hx::CreateEnum< Attribute_obj >(HX_HCSTRING("DefaultForeground","\xc4","\x90","\xd6","\x88"),19,0);
Green = hx::CreateEnum< Attribute_obj >(HX_HCSTRING("Green","\xa3","\x7e","\x1a","\x2d"),13,0);
GreenBack = hx::CreateEnum< Attribute_obj >(HX_HCSTRING("GreenBack","\x6a","\x12","\x6c","\x45"),22,0);
Magenta = hx::CreateEnum< Attribute_obj >(HX_HCSTRING("Magenta","\x09","\xe2","\xee","\xdb"),16,0);
MagentaBack = hx::CreateEnum< Attribute_obj >(HX_HCSTRING("MagentaBack","\xd0","\x20","\x8d","\x54"),25,0);
NormalVideo = hx::CreateEnum< Attribute_obj >(HX_HCSTRING("NormalVideo","\xb4","\x7c","\x60","\xa8"),9,0);
Off = hx::CreateEnum< Attribute_obj >(HX_HCSTRING("Off","\x4f","\x4b","\x3c","\x00"),0,0);
Red = hx::CreateEnum< Attribute_obj >(HX_HCSTRING("Red","\x31","\x91","\x3e","\x00"),12,0);
RedBack = hx::CreateEnum< Attribute_obj >(HX_HCSTRING("RedBack","\xf8","\x83","\xe7","\x73"),21,0);
ReverseVideo = hx::CreateEnum< Attribute_obj >(HX_HCSTRING("ReverseVideo","\x19","\x3c","\x73","\x15"),4,0);
Underline = hx::CreateEnum< Attribute_obj >(HX_HCSTRING("Underline","\xec","\xf4","\xa3","\x29"),2,0);
UnderlineOff = hx::CreateEnum< Attribute_obj >(HX_HCSTRING("UnderlineOff","\xe3","\x31","\x87","\x22"),7,0);
White = hx::CreateEnum< Attribute_obj >(HX_HCSTRING("White","\x89","\xba","\xea","\x5c"),18,0);
WhiteBack = hx::CreateEnum< Attribute_obj >(HX_HCSTRING("WhiteBack","\x50","\x39","\x9f","\xaf"),27,0);
Yellow = hx::CreateEnum< Attribute_obj >(HX_HCSTRING("Yellow","\x94","\x13","\xf1","\x04"),14,0);
YellowBack = hx::CreateEnum< Attribute_obj >(HX_HCSTRING("YellowBack","\xdb","\x73","\xae","\xd1"),23,0);
}


