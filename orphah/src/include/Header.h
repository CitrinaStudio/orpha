// Generated by Haxe 3.4.3
#ifndef INCLUDED_Header
#define INCLUDED_Header

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS0(Header)
HX_DECLARE_CLASS1(haxe,IMap)
HX_DECLARE_CLASS2(haxe,ds,StringMap)



class HXCPP_CLASS_ATTRIBUTES Header_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef Header_obj OBJ_;
		Header_obj();

	public:
		enum { _hx_ClassId = 0x31947dad };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="Header")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,false,"Header"); }

		hx::ObjectPtr< Header_obj > __new() {
			hx::ObjectPtr< Header_obj > __this = new Header_obj();
			__this->__construct();
			return __this;
		}

		static hx::ObjectPtr< Header_obj > __alloc(hx::Ctx *_hx_ctx) {
			Header_obj *__this = (Header_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(Header_obj), false, "Header"));
			*(void **)__this = Header_obj::_hx_vtable;
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~Header_obj();

		HX_DO_RTTI_ALL;
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, hx::PropertyAccess inCallProp);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_HCSTRING("Header","\xad","\x7d","\x94","\x31"); }

		static ::Array< ::String > keys( ::haxe::ds::StringMap map_var);
		static ::Dynamic keys_dyn();

		static  ::haxe::ds::StringMap MAGIC_SPELLS();
		static ::Dynamic MAGIC_SPELLS_dyn();

		static ::String MAPS_PATH();
		static ::Dynamic MAPS_PATH_dyn();

		static ::Array< ::String > PLAYER_CLASSES();
		static ::Dynamic PLAYER_CLASSES_dyn();

		static int QUANTITY_PLAYER_CLASSES();
		static ::Dynamic QUANTITY_PLAYER_CLASSES_dyn();

		static int DEFAULT_MP();
		static ::Dynamic DEFAULT_MP_dyn();

		static int DEFAULT_HP();
		static ::Dynamic DEFAULT_HP_dyn();

		static  ::haxe::ds::StringMap CLASSES_BONUSES();
		static ::Dynamic CLASSES_BONUSES_dyn();

		static  ::haxe::ds::StringMap START_INVENTORY();
		static ::Dynamic START_INVENTORY_dyn();

		static  ::haxe::ds::StringMap CLASSES_ABILITY();
		static ::Dynamic CLASSES_ABILITY_dyn();

		static  ::haxe::ds::StringMap CONVENTIONAL_NOTATIONAL();
		static ::Dynamic CONVENTIONAL_NOTATIONAL_dyn();

		static ::Array< ::String > CONVENTIONAL_NOTATIONAL_ENTER_POINT();
		static ::Dynamic CONVENTIONAL_NOTATIONAL_ENTER_POINT_dyn();

		static  ::haxe::ds::StringMap NAME_MAPS_FILES();
		static ::Dynamic NAME_MAPS_FILES_dyn();

		static  ::haxe::ds::StringMap CONVENTIONAL_NOTATIONAL_TABLES_NAMES();
		static ::Dynamic CONVENTIONAL_NOTATIONAL_TABLES_NAMES_dyn();

		static ::Array< ::String > CONVENTIONAL_NOTATIONAL_WITHOUT_DETAIL();
		static ::Dynamic CONVENTIONAL_NOTATIONAL_WITHOUT_DETAIL_dyn();

		static  ::haxe::ds::StringMap POTENTIAL_ENEMY_STATS();
		static ::Dynamic POTENTIAL_ENEMY_STATS_dyn();

		static ::Array< ::String > MAGIC_MBOSS_SPELLS();
		static ::Dynamic MAGIC_MBOSS_SPELLS_dyn();

		static ::Array< ::String > BODY_PARTS();
		static ::Dynamic BODY_PARTS_dyn();

		static  ::haxe::ds::StringMap POTENTIAL_MBOSS_PREFIX_STATS();
		static ::Dynamic POTENTIAL_MBOSS_PREFIX_STATS_dyn();

		static ::Array< ::String > CONVENTIONAL_NOTATIONAL_VILLAGE();
		static ::Dynamic CONVENTIONAL_NOTATIONAL_VILLAGE_dyn();

		static int DEFAULT_PLAYER_X();
		static ::Dynamic DEFAULT_PLAYER_X_dyn();

		static int DEFAULT_PLAYER_Y();
		static ::Dynamic DEFAULT_PLAYER_Y_dyn();

		static int DEFAULT_WEIGHT_MAP();
		static ::Dynamic DEFAULT_WEIGHT_MAP_dyn();

		static int DEFAULT_HEIGHT_MAP();
		static ::Dynamic DEFAULT_HEIGHT_MAP_dyn();

		static int DEFAULT_WEIGHT_MAP_VILLAGE();
		static ::Dynamic DEFAULT_WEIGHT_MAP_VILLAGE_dyn();

		static int DEFAULT_HEIGHT_MAP_VILLAGE();
		static ::Dynamic DEFAULT_HEIGHT_MAP_VILLAGE_dyn();

		static int DEFAULT_QUANTITY_MAP_STRING();
		static ::Dynamic DEFAULT_QUANTITY_MAP_STRING_dyn();

		static int DEFAULT_QUANTITY_MAP_STRING_VILLAGE();
		static ::Dynamic DEFAULT_QUANTITY_MAP_STRING_VILLAGE_dyn();

		static ::Array< ::String > DUNGEON_PREFIX();
		static ::Dynamic DUNGEON_PREFIX_dyn();

		static ::Array< ::String > DUNGEON_TYPE();
		static ::Dynamic DUNGEON_TYPE_dyn();

		static ::Array< ::String > DUNGEON_SUFFIX();
		static ::Dynamic DUNGEON_SUFFIX_dyn();

};


#endif /* INCLUDED_Header */ 
