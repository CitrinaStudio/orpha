// Generated by Haxe 3.4.3
#ifndef INCLUDED_ANSI
#define INCLUDED_ANSI

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS0(ANSI)
HX_DECLARE_CLASS1(haxe,IMap)
HX_DECLARE_CLASS2(haxe,ds,BalancedTree)
HX_DECLARE_CLASS2(haxe,ds,EnumValueMap)
HX_DECLARE_CLASS2(haxe,ds,StringMap)



class HXCPP_CLASS_ATTRIBUTES ANSI_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef ANSI_obj OBJ_;
		ANSI_obj();

	public:
		enum { _hx_ClassId = 0x2b3256c3 };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="ANSI")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,false,"ANSI"); }

		hx::ObjectPtr< ANSI_obj > __new() {
			hx::ObjectPtr< ANSI_obj > __this = new ANSI_obj();
			__this->__construct();
			return __this;
		}

		static hx::ObjectPtr< ANSI_obj > __alloc(hx::Ctx *_hx_ctx) {
			ANSI_obj *__this = (ANSI_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(ANSI_obj), false, "ANSI"));
			*(void **)__this = ANSI_obj::_hx_vtable;
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~ANSI_obj();

		HX_DO_RTTI_ALL;
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, hx::PropertyAccess inCallProp);
		static bool __SetStatic(const ::String &inString, Dynamic &ioValue, hx::PropertyAccess inCallProp);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_HCSTRING("ANSI","\xc3","\x56","\x32","\x2b"); }

		static void __boot();
		static ::String ESCAPE;
		static ::String BELL;
		static ::String CSI;
		static  ::Dynamic attr;
		static  ::haxe::ds::EnumValueMap values;
		static  ::Dynamic set;
		static bool available;
		static bool strip;
		static bool stripIfUnavailable;
		static ::String aset(::cpp::VirtualArray attributes);
		static ::Dynamic aset_dyn();

		static bool detectSupport();
		static ::Dynamic detectSupport_dyn();

		static ::String title(::String str);
		static ::Dynamic title_dyn();

		static  ::haxe::ds::StringMap sequences;
		static ::String deleteLines(hx::Null< int >  num);
		static ::Dynamic deleteLines_dyn();

		static ::String reset();
		static ::Dynamic reset_dyn();

		static ::String setX(hx::Null< int >  num);
		static ::Dynamic setX_dyn();

		static ::String moveDownReset(hx::Null< int >  num);
		static ::Dynamic moveDownReset_dyn();

		static ::String deleteLine();
		static ::Dynamic deleteLine_dyn();

		static ::String deleteChars(hx::Null< int >  num);
		static ::Dynamic deleteChars_dyn();

		static ::String moveUp(hx::Null< int >  num);
		static ::Dynamic moveUp_dyn();

		static ::String showCursor();
		static ::Dynamic showCursor_dyn();

		static ::String insertChar();
		static ::Dynamic insertChar_dyn();

		static ::String moveLeft(hx::Null< int >  num);
		static ::Dynamic moveLeft_dyn();

		static ::String setY(hx::Null< int >  num);
		static ::Dynamic setY_dyn();

		static ::String eraseLine();
		static ::Dynamic eraseLine_dyn();

		static ::String moveRight(hx::Null< int >  num);
		static ::Dynamic moveRight_dyn();

		static ::String moveUpReset(hx::Null< int >  num);
		static ::Dynamic moveUpReset_dyn();

		static ::String saveCursor();
		static ::Dynamic saveCursor_dyn();

		static ::String eraseChars(hx::Null< int >  num);
		static ::Dynamic eraseChars_dyn();

		static ::String hideCursor();
		static ::Dynamic hideCursor_dyn();

		static ::String setXY(int column,int line);
		static ::Dynamic setXY_dyn();

		static ::String moveDown(hx::Null< int >  num);
		static ::Dynamic moveDown_dyn();

		static ::String eraseDisplay();
		static ::Dynamic eraseDisplay_dyn();

		static ::String insertLines(hx::Null< int >  num);
		static ::Dynamic insertLines_dyn();

		static ::String eraseDisplayToEnd();
		static ::Dynamic eraseDisplayToEnd_dyn();

		static ::String eraseLineToEnd();
		static ::Dynamic eraseLineToEnd_dyn();

		static ::String eraseLineToCursor();
		static ::Dynamic eraseLineToCursor_dyn();

		static ::String insertLine();
		static ::Dynamic insertLine_dyn();

		static ::String insertChars(hx::Null< int >  num);
		static ::Dynamic insertChars_dyn();

		static ::String eraseChar();
		static ::Dynamic eraseChar_dyn();

		static ::String deleteChar();
		static ::Dynamic deleteChar_dyn();

		static ::String loadCursor();
		static ::Dynamic loadCursor_dyn();

		static ::String eraseDisplayToCursor();
		static ::Dynamic eraseDisplayToCursor_dyn();

		static ::String resetY(hx::Null< int >  num);
		static ::Dynamic resetY_dyn();

};


#endif /* INCLUDED_ANSI */ 
